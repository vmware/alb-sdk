{
    "swagger": "2.0",
    "info": {
        "version": "22.1.1",
        "title": "Avi BotDetectionPolicy Object API",
        "contact": {
            "name": "Avi Networks Inc.",
            "url": "https://avinetworks.com/contact-us",
            "email": "support@avinetworks.com"
        },
        "description": "CLI\n```\n- configure botdetectionpolicy <key>\n- show botdetectionpolicy <key>\n```\n"
    },
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic",
            "description": "basic authentication"
        }
    },
    "basePath": "/api",
    "paths": {
        "/botdetectionpolicy": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "refers_to",
                        "in": "query",
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid",
                        "type": "string"
                    },
                    {
                        "name": "referred_by",
                        "in": "query",
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid",
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.",
                        "type": "string"
                    },
                    {
                        "name": "include_name",
                        "in": "query",
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "skip_default",
                        "in": "query",
                        "description": "Default values are not set.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "join_subresources",
                        "in": "query",
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.",
                        "type": "string"
                    },
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BotDetectionPolicyApiResponse"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "BotDetectionPolicy object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BotDetectionPolicy"
                        }
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BotDetectionPolicy"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/botdetectionpolicy/{uuid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.",
                        "type": "string"
                    },
                    {
                        "name": "include_name",
                        "in": "query",
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "skip_default",
                        "in": "query",
                        "description": "Default values are not set.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "join_subresources",
                        "in": "query",
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BotDetectionPolicy"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "BotDetectionPolicy object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BotDetectionPolicy"
                        }
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BotDetectionPolicy"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "BotDetectionPolicy object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BotDetectionPolicy"
                        }
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BotDetectionPolicy"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "object deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "BotAllowList": {
            "type": "object",
            "properties": {
                "rules": {
                    "description": "Allow rules to control which requests undergo BOT detection. Field introduced in 21.1.1.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BotAllowRule"
                    }
                }
            }
        },
        "BotAllowRule": {
            "type": "object",
            "required": [
                "action",
                "condition",
                "index"
            ],
            "properties": {
                "action": {
                    "description": "The action to take. Enum options - BOT_ACTION_BYPASS, BOT_ACTION_CONTINUE. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "condition": {
                    "description": "The condition to match. Field introduced in 21.1.1.",
                    "$ref": "#/definitions/MatchTarget"
                },
                "index": {
                    "description": "Rules are processed in order of this index field. Field introduced in 21.1.1.",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "A name describing the rule in a short form. Field introduced in 21.1.1.",
                    "type": "string"
                }
            }
        },
        "BotClassification": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "One of the system-defined Bot classification types. Enum options - HUMAN, GOOD_BOT, BAD_BOT, DANGEROUS_BOT, USER_DEFINED_BOT, UNKNOWN_CLIENT. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "user_defined_type": {
                    "description": "If 'type' has BotClassificationTypes value 'USER_DEFINED', this is the user-defined value. Field introduced in 21.1.1.",
                    "type": "string"
                }
            }
        },
        "BotConfigIPLocation": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "If this is enabled, IP location information is used to determine if a client is a known search engine bot, comes from the cloud, etc. Field introduced in 21.1.1.",
                    "type": "boolean",
                    "default": true
                },
                "ip_location_db_ref": {
                    "description": "The UUID of the Geo-IP database to use. It is a reference to an object of type GeoDB. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "system_cloud_providers_ref": {
                    "description": "The system-defined cloud providers. It is a reference to an object of type StringGroup. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "system_search_engines_ref": {
                    "description": "The system-defined search engines. It is a reference to an object of type StringGroup. Field introduced in 21.1.1.",
                    "type": "string"
                }
            }
        },
        "BotConfigIPReputation": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Whether IP reputation-based Bot detection is enabled. Field introduced in 21.1.1.",
                    "type": "boolean",
                    "default": true
                },
                "ip_reputation_db_ref": {
                    "description": "The UUID of the IP reputation DB to use. It is a reference to an object of type IPReputationDB. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "system_ip_reputation_mapping_ref": {
                    "description": "The system-provided mapping from IP reputation types to Bot types. It is a reference to an object of type BotIPReputationTypeMapping. Field introduced in 21.1.1.",
                    "type": "string"
                }
            }
        },
        "BotConfigUserAgent": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Whether User Agent-based Bot detection is enabled. Field introduced in 21.1.1.",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "BotDetectionMatch": {
            "type": "object",
            "required": [
                "match_operation"
            ],
            "properties": {
                "classifications": {
                    "description": "Bot classification types. Field introduced in 21.1.1.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BotClassification"
                    }
                },
                "match_operation": {
                    "description": "Match criteria. Enum options - IS_IN, IS_NOT_IN. Field introduced in 21.1.1.",
                    "type": "string"
                }
            }
        },
        "BotDetectionPolicy": {
            "type": "object",
            "required": [
                "ip_location_detector",
                "ip_reputation_detector",
                "name",
                "user_agent_detector"
            ],
            "properties": {
                "_last_modified": {
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS).",
                    "readOnly": true,
                    "type": "string"
                },
                "allow_list": {
                    "description": "Allow the user to skip BotManagement for selected requests. Field introduced in 21.1.1.",
                    "$ref": "#/definitions/BotAllowList"
                },
                "description": {
                    "description": "Human-readable description of this Bot Detection Policy. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "ip_location_detector": {
                    "description": "The IP location configuration used in this policy. Field introduced in 21.1.1.",
                    "$ref": "#/definitions/BotConfigIPLocation"
                },
                "ip_reputation_detector": {
                    "description": "The IP reputation configuration used in this policy. Field introduced in 21.1.1.",
                    "$ref": "#/definitions/BotConfigIPReputation"
                },
                "name": {
                    "description": "The name of this Bot Detection Policy. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "system_bot_mapping_ref": {
                    "description": "System-defined rules for classification. It is a reference to an object of type BotMapping. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "system_consolidator_ref": {
                    "description": "The installation provides an updated ruleset for consolidating the results of different decider phases. It is a reference to an object of type BotConfigConsolidator. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "tenant_ref": {
                    "description": "The unique identifier of the tenant to which this policy belongs. It is a reference to an object of type Tenant. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "url": {
                    "description": "url",
                    "readOnly": true,
                    "type": "string"
                },
                "user_agent_detector": {
                    "description": "The User-Agent configuration used in this policy. Field introduced in 21.1.1.",
                    "$ref": "#/definitions/BotConfigUserAgent"
                },
                "user_bot_mapping_ref": {
                    "description": "User-defined rules for classification. These are applied before the system classification rules. If a rule matches, processing terminates and the system-defined rules will not run. It is a reference to an object of type BotMapping. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "user_consolidator_ref": {
                    "description": "The user-provided ruleset for consolidating the results of different decider phases. This runs before the system consolidator. If it successfully sets a consolidation, the system consolidator will not change it. It is a reference to an object of type BotConfigConsolidator. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "uuid": {
                    "description": "A unique identifier to this Bot Detection Policy. Field introduced in 21.1.1.",
                    "type": "string"
                }
            }
        },
        "BotDetectionPolicyApiResponse": {
            "type": "object",
            "required": [
                "count",
                "results"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BotDetectionPolicy"
                    }
                },
                "next": {
                    "type": "string"
                }
            }
        },
        "CookieMatch": {
            "type": "object",
            "required": [
                "match_criteria",
                "name"
            ],
            "properties": {
                "match_case": {
                    "description": "Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE.",
                    "type": "string",
                    "default": "INSENSITIVE"
                },
                "match_criteria": {
                    "description": "Criterion to use for matching the cookie in the HTTP request. Enum options - HDR_EXISTS, HDR_DOES_NOT_EXIST, HDR_BEGINS_WITH, HDR_DOES_NOT_BEGIN_WITH, HDR_CONTAINS, HDR_DOES_NOT_CONTAIN, HDR_ENDS_WITH, HDR_DOES_NOT_END_WITH, HDR_EQUALS, HDR_DOES_NOT_EQUAL.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the cookie.",
                    "type": "string"
                },
                "value": {
                    "description": "String value in the cookie.",
                    "type": "string"
                }
            }
        },
        "GeoMatch": {
            "type": "object",
            "required": [
                "attribute",
                "match_operation",
                "values"
            ],
            "properties": {
                "attribute": {
                    "description": "The Geo data type to match on. Enum options - ATTRIBUTE_IP_PREFIX, ATTRIBUTE_COUNTRY_CODE, ATTRIBUTE_COUNTRY_NAME, ATTRIBUTE_CONTINENT_CODE, ATTRIBUTE_CONTINENT_NAME, ATTRIBUTE_REGION_NAME, ATTRIBUTE_CITY_NAME, ATTRIBUTE_ISP_NAME, ATTRIBUTE_ORGANIZATION_NAME, ATTRIBUTE_AS_NUMBER, ATTRIBUTE_AS_NAME, ATTRIBUTE_LONGITUDE, ATTRIBUTE_LATITUDE, ATTRIBUTE_CUSTOM_1, ATTRIBUTE_CUSTOM_2, ATTRIBUTE_CUSTOM_3, ATTRIBUTE_CUSTOM_4, ATTRIBUTE_CUSTOM_5, ATTRIBUTE_CUSTOM_6, ATTRIBUTE_CUSTOM_7, ATTRIBUTE_CUSTOM_8, ATTRIBUTE_CUSTOM_9, ATTRIBUTE_USER_DEFINED_MAPPING. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "match_operation": {
                    "description": "Match criteria. Enum options - IS_IN, IS_NOT_IN. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "values": {
                    "description": "The values to match. Field introduced in 21.1.1.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "HdrMatch": {
            "type": "object",
            "required": [
                "hdr",
                "match_criteria"
            ],
            "properties": {
                "hdr": {
                    "description": "Name of the HTTP header whose value is to be matched.",
                    "type": "string"
                },
                "match_case": {
                    "description": "Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE.",
                    "type": "string",
                    "default": "INSENSITIVE"
                },
                "match_criteria": {
                    "description": "Criterion to use for matching headers in the HTTP request. Enum options - HDR_EXISTS, HDR_DOES_NOT_EXIST, HDR_BEGINS_WITH, HDR_DOES_NOT_BEGIN_WITH, HDR_CONTAINS, HDR_DOES_NOT_CONTAIN, HDR_ENDS_WITH, HDR_DOES_NOT_END_WITH, HDR_EQUALS, HDR_DOES_NOT_EQUAL.",
                    "type": "string"
                },
                "value": {
                    "description": "String values to match in the HTTP header.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "HostHdrMatch": {
            "type": "object",
            "required": [
                "match_criteria"
            ],
            "properties": {
                "match_case": {
                    "description": "Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE.",
                    "type": "string",
                    "default": "INSENSITIVE"
                },
                "match_criteria": {
                    "description": "Criterion to use for the host header value match. Enum options - HDR_EXISTS, HDR_DOES_NOT_EXIST, HDR_BEGINS_WITH, HDR_DOES_NOT_BEGIN_WITH, HDR_CONTAINS, HDR_DOES_NOT_CONTAIN, HDR_ENDS_WITH, HDR_DOES_NOT_END_WITH, HDR_EQUALS, HDR_DOES_NOT_EQUAL.",
                    "type": "string"
                },
                "value": {
                    "description": "String value(s) in the host header.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "HTTPVersionMatch": {
            "type": "object",
            "required": [
                "match_criteria"
            ],
            "properties": {
                "match_criteria": {
                    "description": "Criterion to use for HTTP version matching the version used in the HTTP request. Enum options - IS_IN, IS_NOT_IN.",
                    "type": "string"
                },
                "versions": {
                    "description": "HTTP protocol version. Enum options - ZERO_NINE, ONE_ZERO, ONE_ONE, TWO_ZERO. Minimum of 1 items required. Maximum of 8 items allowed. Allowed in Basic(Allowed values- ONE_ZERO,ONE_ONE) edition, Essentials(Allowed values- ONE_ZERO,ONE_ONE) edition, Enterprise edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "IpAddr": {
            "type": "object",
            "required": [
                "addr",
                "type"
            ],
            "properties": {
                "addr": {
                    "description": "IP address.",
                    "type": "string"
                },
                "type": {
                    "description": " Enum options - V4, DNS, V6.",
                    "type": "string"
                }
            }
        },
        "IpAddrMatch": {
            "type": "object",
            "required": [
                "match_criteria"
            ],
            "properties": {
                "addrs": {
                    "description": "IP address(es).",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IpAddr"
                    }
                },
                "group_refs": {
                    "description": "UUID of IP address group(s). It is a reference to an object of type IpAddrGroup.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "match_criteria": {
                    "description": "Criterion to use for IP address matching the HTTP request. Enum options - IS_IN, IS_NOT_IN.",
                    "type": "string"
                },
                "prefixes": {
                    "description": "IP address prefix(es).",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IpAddrPrefix"
                    }
                },
                "ranges": {
                    "description": "IP address range(s).",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IpAddrRange"
                    }
                }
            }
        },
        "IpAddrPrefix": {
            "type": "object",
            "required": [
                "ip_addr",
                "mask"
            ],
            "properties": {
                "ip_addr": {
                    "description": "Placeholder for description of property ip_addr of obj type IpAddrPrefix field type str  type object",
                    "$ref": "#/definitions/IpAddr"
                },
                "mask": {
                    "description": "Number of mask.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IpAddrRange": {
            "type": "object",
            "required": [
                "begin",
                "end"
            ],
            "properties": {
                "begin": {
                    "description": "Starting IP address of the range.",
                    "$ref": "#/definitions/IpAddr"
                },
                "end": {
                    "description": "Ending IP address of the range.",
                    "$ref": "#/definitions/IpAddr"
                }
            }
        },
        "IPReputationTypeMatch": {
            "type": "object",
            "required": [
                "match_operation"
            ],
            "properties": {
                "match_operation": {
                    "description": "Match criteria. Enum options - IS_IN, IS_NOT_IN. Field introduced in 20.1.1.",
                    "type": "string"
                },
                "reputation_types": {
                    "description": "IP reputation type. Enum options - IP_REPUTATION_TYPE_SPAM_SOURCE, IP_REPUTATION_TYPE_WINDOWS_EXPLOITS, IP_REPUTATION_TYPE_WEB_ATTACKS, IP_REPUTATION_TYPE_BOTNETS, IP_REPUTATION_TYPE_SCANNERS, IP_REPUTATION_TYPE_DOS, IP_REPUTATION_TYPE_REPUTATION, IP_REPUTATION_TYPE_PHISHING, IP_REPUTATION_TYPE_PROXY, IP_REPUTATION_TYPE_NETWORK, IP_REPUTATION_TYPE_CLOUD, IP_REPUTATION_TYPE_MOBILE_THREATS, IP_REPUTATION_TYPE_TOR, IP_REPUTATION_TYPE_ALL. Field introduced in 20.1.1. Minimum of 1 items required.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "MatchTarget": {
            "type": "object",
            "properties": {
                "bot_detection_result": {
                    "description": "Configure the bot classification result. Field introduced in 21.1.1.",
                    "$ref": "#/definitions/BotDetectionMatch"
                },
                "client_ip": {
                    "description": "Configure client ip addresses.",
                    "$ref": "#/definitions/IpAddrMatch"
                },
                "cookie": {
                    "description": "Configure HTTP cookie(s).",
                    "$ref": "#/definitions/CookieMatch"
                },
                "geo_matches": {
                    "description": "Configure the geo information. Field introduced in 21.1.1. Maximum of 1 items allowed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeoMatch"
                    }
                },
                "hdrs": {
                    "description": "Configure HTTP header(s). All configured headers must match.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HdrMatch"
                    }
                },
                "host_hdr": {
                    "description": "Configure the host header.",
                    "$ref": "#/definitions/HostHdrMatch"
                },
                "ip_reputation_type": {
                    "description": "Configure IP reputation. Field introduced in 20.1.3.",
                    "$ref": "#/definitions/IPReputationTypeMatch"
                },
                "method": {
                    "description": "Configure HTTP methods.",
                    "$ref": "#/definitions/MethodMatch"
                },
                "path": {
                    "description": "Configure request paths.",
                    "$ref": "#/definitions/PathMatch"
                },
                "protocol": {
                    "description": "Configure the type of HTTP protocol.",
                    "$ref": "#/definitions/ProtocolMatch"
                },
                "query": {
                    "description": "Configure request query.",
                    "$ref": "#/definitions/QueryMatch"
                },
                "source_ip": {
                    "description": "Configure source ip addresses. Field introduced in 21.1.3.",
                    "$ref": "#/definitions/IpAddrMatch"
                },
                "version": {
                    "description": "Configure versions of the HTTP protocol.",
                    "$ref": "#/definitions/HTTPVersionMatch"
                },
                "vs_port": {
                    "description": "Configure virtual service ports.",
                    "$ref": "#/definitions/PortMatch"
                }
            }
        },
        "MethodMatch": {
            "type": "object",
            "required": [
                "match_criteria"
            ],
            "properties": {
                "match_criteria": {
                    "description": "Criterion to use for HTTP method matching the method in the HTTP request. Enum options - IS_IN, IS_NOT_IN.",
                    "type": "string"
                },
                "methods": {
                    "description": "Configure HTTP method(s). Enum options - HTTP_METHOD_GET, HTTP_METHOD_HEAD, HTTP_METHOD_PUT, HTTP_METHOD_DELETE, HTTP_METHOD_POST, HTTP_METHOD_OPTIONS, HTTP_METHOD_TRACE, HTTP_METHOD_CONNECT, HTTP_METHOD_PATCH, HTTP_METHOD_PROPFIND, HTTP_METHOD_PROPPATCH, HTTP_METHOD_MKCOL, HTTP_METHOD_COPY, HTTP_METHOD_MOVE, HTTP_METHOD_LOCK, HTTP_METHOD_UNLOCK. Minimum of 1 items required. Maximum of 16 items allowed. Allowed in Basic(Allowed values- HTTP_METHOD_GET,HTTP_METHOD_PUT,HTTP_METHOD_POST,HTTP_METHOD_HEAD,HTTP_METHOD_OPTIONS) edition, Essentials(Allowed values- HTTP_METHOD_GET,HTTP_METHOD_PUT,HTTP_METHOD_POST,HTTP_METHOD_HEAD,HTTP_METHOD_OPTIONS) edition, Enterprise edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PathMatch": {
            "type": "object",
            "required": [
                "match_criteria"
            ],
            "properties": {
                "match_case": {
                    "description": "Case sensitivity to use for the matching. Enum options - SENSITIVE, INSENSITIVE.",
                    "type": "string",
                    "default": "INSENSITIVE"
                },
                "match_criteria": {
                    "description": "Criterion to use for matching the path in the HTTP request URI. Enum options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH. Allowed in Basic(Allowed values- BEGINS_WITH,DOES_NOT_BEGIN_WITH,CONTAINS,DOES_NOT_CONTAIN,ENDS_WITH,DOES_NOT_END_WITH,EQUALS,DOES_NOT_EQUAL) edition, Essentials(Allowed values- BEGINS_WITH,DOES_NOT_BEGIN_WITH,CONTAINS,DOES_NOT_CONTAIN,ENDS_WITH,DOES_NOT_END_WITH,EQUALS,DOES_NOT_EQUAL) edition, Enterprise edition.",
                    "type": "string",
                    "default": "CONTAINS"
                },
                "match_str": {
                    "description": "String values.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "string_group_refs": {
                    "description": "UUID of the string group(s). It is a reference to an object of type StringGroup.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PortMatch": {
            "type": "object",
            "required": [
                "match_criteria"
            ],
            "properties": {
                "match_criteria": {
                    "description": "Criterion to use for port matching the HTTP request. Enum options - IS_IN, IS_NOT_IN.",
                    "type": "string"
                },
                "ports": {
                    "description": "Listening TCP port(s). Allowed values are 1-65535. Minimum of 1 items required.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "format": "int32"
                }
            }
        },
        "ProtocolMatch": {
            "type": "object",
            "required": [
                "match_criteria",
                "protocols"
            ],
            "properties": {
                "match_criteria": {
                    "description": "Criterion to use for protocol matching the HTTP request. Enum options - IS_IN, IS_NOT_IN.",
                    "type": "string"
                },
                "protocols": {
                    "description": "HTTP or HTTPS protocol. Enum options - HTTP, HTTPS.",
                    "type": "string"
                }
            }
        },
        "QueryMatch": {
            "type": "object",
            "required": [
                "match_criteria"
            ],
            "properties": {
                "match_case": {
                    "description": "Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE.",
                    "type": "string",
                    "default": "INSENSITIVE"
                },
                "match_criteria": {
                    "description": "Criterion to use for matching the query in HTTP request URI. Enum options - QUERY_MATCH_CONTAINS.",
                    "type": "string"
                },
                "match_str": {
                    "description": "String value(s).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "string_group_refs": {
                    "description": "UUID of the string group(s). It is a reference to an object of type StringGroup.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "_comment": [
        "Copyright 2021 VMware, Inc.",
        "SPDX-License-Identifier: Apache License 2.0"
    ]
}