{
    "swagger": "2.0",
    "info": {
        "version": "30.2.1",
        "title": "Avi Cloud Object API",
        "contact": {
            "name": "Avi Networks Inc.",
            "url": "https://avinetworks.com/contact-us",
            "email": "support@avinetworks.com"
        },
        "description": "CLI\n```\n- configure cloud <key>\n- show cloud <key>\n- show cloud internals\n```\n"
    },
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic",
            "description": "basic authentication"
        }
    },
    "basePath": "/api",
    "paths": {
        "/cloud": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "refers_to",
                        "in": "query",
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid",
                        "type": "string"
                    },
                    {
                        "name": "referred_by",
                        "in": "query",
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid",
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.",
                        "type": "string"
                    },
                    {
                        "name": "include_name",
                        "in": "query",
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "skip_default",
                        "in": "query",
                        "description": "Default values are not set.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "join_subresources",
                        "in": "query",
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.",
                        "type": "string"
                    },
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CloudApiResponse"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Cloud object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Cloud"
                        }
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cloud"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/cloud/{uuid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.",
                        "type": "string"
                    },
                    {
                        "name": "include_name",
                        "in": "query",
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "skip_default",
                        "in": "query",
                        "description": "Default values are not set.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "join_subresources",
                        "in": "query",
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cloud"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Cloud object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Cloud"
                        }
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cloud"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Cloud object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Cloud"
                        }
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cloud"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "object deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/cloud/list": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "empty",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/cloud/{uuid}/internals/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/cloud/{uuid}/status/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/cloud/{uuid}/gc/": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "empty",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/cloud/{uuid}/health/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/cloud/{uuid}/hosts/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/cloud/{uuid}/autoscalegroup/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/cloud/{uuid}/autoscalegroupservers/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/cloud/{uuid}/placement/summary/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/cloud/{uuid}/placement/ineligible/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        }
    },
    "definitions": {
        "AwsConfiguration": {
            "type": "object",
            "required": [
                "vpc_id"
            ],
            "properties": {
                "access_key_id": {
                    "description": "AWS access key ID. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "asg_poll_interval": {
                    "description": "Time interval between periodic polling of all Auto Scaling Groups. Allowed values are 60-1800. Field introduced in 17.1.3. Unit is SEC. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 600,
                    "format": "int32"
                },
                "ebs_encryption": {
                    "description": "EBS encryption mode and the master key to be used for encrypting SE AMI, Volumes, and Snapshots. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/AwsEncryption"
                },
                "free_elasticips": {
                    "description": "Free unused elastic IP addresses. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "iam_assume_role": {
                    "description": "IAM assume role for cross-account access. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "publish_vip_to_public_zone": {
                    "description": "If enabled and the virtual service is not floating ip capable, vip will be published to both private and public zones. Field introduced in 17.2.10. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "region": {
                    "description": "AWS region. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "us-west-1"
                },
                "route53_integration": {
                    "description": "If enabled, create/update DNS entries in Amazon Route 53 zones. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "s3_encryption": {
                    "description": "S3 encryption mode and the master key to be used for encrypting S3 buckets during SE AMI upload. Only SSE-KMS mode is supported. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/AwsEncryption"
                },
                "secret_access_key": {
                    "description": "AWS secret access key. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "sqs_encryption": {
                    "description": "Server Side Encryption to be used for encrypting SQS Queues. Field introduced in 17.2.8. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/AwsEncryption"
                },
                "ttl": {
                    "description": "Default TTL for all records. Allowed values are 1-172800. Field introduced in 17.1.3. Unit is SEC. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 60,
                    "format": "int32"
                },
                "use_iam_roles": {
                    "description": "Use IAM roles instead of access and secret key. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "use_sns_sqs": {
                    "description": "Use SNS/SQS based notifications for monitoring Auto Scaling Groups. Field introduced in 17.1.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "vpc": {
                    "description": "VPC name. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vpc_id": {
                    "description": "VPC ID. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "zones": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AwsZoneConfig"
                    }
                }
            }
        },
        "AwsEncryption": {
            "type": "object",
            "properties": {
                "master_key": {
                    "description": "AWS KMS ARN ID of the master key for encryption. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "mode": {
                    "description": "AWS encryption mode. Enum options - AWS_ENCRYPTION_MODE_NONE, AWS_ENCRYPTION_MODE_SSE_KMS. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "AWS_ENCRYPTION_MODE_NONE"
                }
            }
        },
        "AwsZoneConfig": {
            "type": "object",
            "required": [
                "availability_zone",
                "mgmt_network_name"
            ],
            "properties": {
                "availability_zone": {
                    "description": "Availability zone. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "mgmt_network_name": {
                    "description": "Name or CIDR of the network in the Availability Zone that will be used as management network. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "mgmt_network_uuid": {
                    "description": "UUID of the network in the Availability Zone that will be used as management network. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "AzureConfiguration": {
            "type": "object",
            "properties": {
                "availability_zones": {
                    "description": "Availability zones to be used in Azure. Field introduced in 17.2.5. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cloud_credentials_ref": {
                    "description": "Credentials to access azure cloud. It is a reference to an object of type CloudConnectorUser. Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "des_id": {
                    "description": "Disks Encryption Set resource-id (des_id) to encrypt se image and managed disk using customer-managed-keys. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "location": {
                    "description": "Azure location where this cloud will be located. Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "network_info": {
                    "description": "Azure virtual network and subnet information. Field introduced in 17.2.1. Minimum of 1 items required. Maximum of 1 items allowed. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AzureNetworkInfo"
                    }
                },
                "resource_group": {
                    "description": "Azure resource group dedicated for Avi Controller. Avi Controller will create all its resources in this resource group. Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_storage_account": {
                    "description": "Storage Account to be used for uploading SE VHD images to Azure. Must include the resource group name. Format '<resource-group> <storage-account-name>'. Field introduced in 22.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "subscription_id": {
                    "description": "Subscription Id for the Azure subscription. Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "use_azure_dns": {
                    "description": "Azure is the DNS provider. Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "use_enhanced_ha": {
                    "description": "Use Azure's enhanced HA features. This needs a public IP to be associated with the VIP. . Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "use_managed_disks": {
                    "description": "Use Azure managed disks for SE storage. Field introduced in 17.2.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "use_standard_alb": {
                    "description": "Use Standard SKU Azure Load Balancer. By default Basic SKU Load Balancer is used. Field introduced in 17.2.7. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                }
            }
        },
        "AzureNetworkInfo": {
            "type": "object",
            "properties": {
                "management_network_id": {
                    "description": "Id of the Azure subnet used as management network for the Service Engines. If set, Service Engines will have a dedicated management NIC, otherwise, they operate in inband mode. Field introduced in 18.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_network_id": {
                    "description": "Id of the Azure subnet where Avi Controller will create the Service Engines. . Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "virtual_network_id": {
                    "description": "Virtual network where Virtual IPs will belong. Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "Cloud": {
            "type": "object",
            "required": [
                "name",
                "vtype"
            ],
            "properties": {
                "_last_modified": {
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS).",
                    "readOnly": true,
                    "type": "string"
                },
                "autoscale_polling_interval": {
                    "description": "CloudConnector polling interval in seconds for external autoscale groups, minimum 60 seconds. Allowed values are 60-3600. Field introduced in 18.2.2. Unit is SECONDS. Allowed in Enterprise edition with any value, Essentials edition(Allowed values- 60), Basic edition(Allowed values- 60), Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 60,
                    "format": "int32"
                },
                "aws_configuration": {
                    "description": " Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/AwsConfiguration"
                },
                "azure_configuration": {
                    "description": " Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/AzureConfiguration"
                },
                "cloudstack_configuration": {
                    "description": " Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/CloudStackConfiguration"
                },
                "configpb_attributes": {
                    "description": "Protobuf versioning for config pbs. Field introduced in 21.1.1. Allowed in Enterprise edition with any value, Essentials edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/ConfigPbAttributes"
                },
                "custom_tags": {
                    "description": "Custom tags for all Avi created resources in the cloud infrastructure. Field introduced in 17.1.5. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomTag"
                    }
                },
                "dhcp_enabled": {
                    "description": "Select the IP address management scheme. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "dns_provider_ref": {
                    "description": "DNS Profile for the cloud. It is a reference to an object of type IpamDnsProviderProfile. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "dns_resolution_on_se": {
                    "description": "By default, pool member FQDNs are resolved on the Controller. When this is set, pool member FQDNs are instead resolved on Service Engines in this cloud. This is useful in scenarios where pool member FQDNs can only be resolved from Service Engines and not from the Controller. Field introduced in 18.2.6. Allowed in Enterprise edition with any value, Essentials edition(Allowed values- false), Basic edition(Allowed values- false), Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "dns_resolvers": {
                    "description": "DNS resolver for the cloud. Field introduced in 20.1.5. Maximum of 1 items allowed. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DnsResolver"
                    }
                },
                "docker_configuration": {
                    "description": " Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/DockerConfiguration"
                },
                "east_west_dns_provider_ref": {
                    "description": "DNS Profile for East-West services. It is a reference to an object of type IpamDnsProviderProfile. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "east_west_ipam_provider_ref": {
                    "description": "Ipam Profile for East-West services. Warning - Please use virtual subnets in this IPAM profile that do not conflict with the underlay networks or any overlay networks in the cluster. For example in AWS and GCP, 169.254.0.0/16 is used for storing instance metadata. Hence, it should not be used in this profile. It is a reference to an object of type IpamDnsProviderProfile. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "enable_vip_on_all_interfaces": {
                    "description": "Enable VIP on all data interfaces for the Cloud. Field introduced in 18.2.9, 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "enable_vip_static_routes": {
                    "description": "Use static routes for VIP side network resolution during VirtualService placement. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "gcp_configuration": {
                    "description": "Google Cloud Platform Configuration. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/GCPConfiguration"
                },
                "ip6_autocfg_enabled": {
                    "description": "Enable IPv6 auto configuration. Field introduced in 18.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "ipam_provider_ref": {
                    "description": "Ipam Profile for the cloud. It is a reference to an object of type IpamDnsProviderProfile. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "license_tier": {
                    "description": "Specifies the default license tier which would be used by new SE Groups. This field by default inherits the value from system configuration. Enum options - ENTERPRISE_16, ENTERPRISE, ENTERPRISE_18, BASIC, ESSENTIALS, ENTERPRISE_WITH_CLOUD_SERVICES. Field introduced in 17.2.5. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "license_type": {
                    "description": "If no license type is specified then default license enforcement for the cloud type is chosen. The default mappings are Container Cloud is Max Ses, OpenStack and VMware is cores and linux it is Sockets. Enum options - LIC_BACKEND_SERVERS, LIC_SOCKETS, LIC_CORES, LIC_HOSTS, LIC_SE_BANDWIDTH, LIC_METERED_SE_BANDWIDTH. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "linuxserver_configuration": {
                    "description": " Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/LinuxServerConfiguration"
                },
                "maintenance_mode": {
                    "description": "Cloud is in maintenance mode. Field introduced in 20.1.7,21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "markers": {
                    "description": "List of labels to be used for granular RBAC. Field introduced in 22.1.1. Allowed in Enterprise edition with any value, Essentials edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleFilterMatchLabel"
                    }
                },
                "metrics_polling_interval": {
                    "description": "Cloud metrics collector polling interval in seconds. Field introduced in 22.1.1. Unit is SECONDS. Allowed in Enterprise edition with any value, Essentials edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 300,
                    "format": "int32"
                },
                "mtu": {
                    "description": "MTU setting for the cloud. Unit is BYTES. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 1500,
                    "format": "int32"
                },
                "name": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "nsxt_configuration": {
                    "description": "NSX-T Cloud Platform Configuration. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/NsxtConfiguration"
                },
                "ntp_configuration": {
                    "description": "NTP Configuration for the cloud. Field introduced in 22.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/NTPConfiguration"
                },
                "obj_name_prefix": {
                    "description": "Default prefix for all automatically created objects in this cloud. This prefix can be overridden by the SE-Group template. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "openstack_configuration": {
                    "description": " Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/OpenStackConfiguration"
                },
                "prefer_static_routes": {
                    "description": "Prefer static routes over interface routes during VirtualService placement. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "proxy_configuration": {
                    "description": " Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/ProxyConfiguration"
                },
                "rancher_configuration": {
                    "description": " Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/RancherConfiguration"
                },
                "resolve_fqdn_to_ipv6": {
                    "description": "Resolve IPv6 address for pool member FQDNs. Field introduced in 30.2.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "se_group_template_ref": {
                    "description": "The Service Engine Group to use as template. It is a reference to an object of type ServiceEngineGroup. Field introduced in 18.2.5. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "state_based_dns_registration": {
                    "description": "DNS records for VIPs are added/deleted based on the operational state of the VIPs. Field introduced in 17.1.12. Allowed in Enterprise edition with any value, Essentials edition(Allowed values- true), Basic edition(Allowed values- true), Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "tenant_ref": {
                    "description": " It is a reference to an object of type Tenant. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "url": {
                    "description": "url",
                    "readOnly": true,
                    "type": "string"
                },
                "uuid": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vca_configuration": {
                    "description": " Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/vCloudAirConfiguration"
                },
                "vcenter_configuration": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/vCenterConfiguration"
                },
                "vmc_deployment": {
                    "description": "This deployment is VMware on AWS cloud. Field introduced in 20.1.5, 21.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "vtype": {
                    "description": "Cloud type. Enum options - CLOUD_NONE, CLOUD_VCENTER, CLOUD_OPENSTACK, CLOUD_AWS, CLOUD_VCA, CLOUD_APIC, CLOUD_MESOS, CLOUD_LINUXSERVER, CLOUD_DOCKER_UCP, CLOUD_RANCHER, CLOUD_OSHIFT_K8S, CLOUD_AZURE, CLOUD_GCP, CLOUD_NSXT. Allowed in Enterprise edition with any value, Essentials edition(Allowed values- CLOUD_NONE,CLOUD_VCENTER), Basic edition(Allowed values- CLOUD_NONE,CLOUD_NSXT), Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "CLOUD_NONE"
                }
            }
        },
        "CloudApiResponse": {
            "type": "object",
            "required": [
                "count",
                "results"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Cloud"
                    }
                },
                "next": {
                    "type": "string"
                }
            }
        },
        "CloudStackConfiguration": {
            "type": "object",
            "required": [
                "access_key_id",
                "api_url",
                "mgmt_network_name",
                "secret_access_key"
            ],
            "properties": {
                "access_key_id": {
                    "description": "CloudStack API Key. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "api_url": {
                    "description": "CloudStack API URL. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "cntr_public_ip": {
                    "description": "If controller's management IP is in a private network, a publicly accessible IP to reach the controller. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "hypervisor": {
                    "description": "Default hypervisor type. Enum options - DEFAULT, VMWARE_ESX, KVM, VMWARE_VSAN, XEN. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "KVM"
                },
                "mgmt_network_name": {
                    "description": "Avi Management network name. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "mgmt_network_uuid": {
                    "description": "Avi Management network name. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "secret_access_key": {
                    "description": "CloudStack Secret Key. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "ConfigPbAttributes": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "Protobuf version number. Gets incremented if there is se Diff of federated diff in config pbs.This field will be a monotonically increasing number indicating the number of Config Update operations. Field introduced in 21.1.1. Allowed in Enterprise edition with any value, Essentials edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 1,
                    "format": "int32"
                }
            }
        },
        "ContentLibConfig": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Content Library Id. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "name": {
                    "description": "Content Library name. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "CustomTag": {
            "type": "object",
            "required": [
                "tag_key"
            ],
            "properties": {
                "tag_key": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "tag_val": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "DataNetworkConfig": {
            "type": "object",
            "properties": {
                "tier1_segment_config": {
                    "description": "Nsxt tier1 segment configuration for Avi Service Engine data path. This should be set only when transport zone is of type OVERLAY. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/NsxtTier1SegmentConfig"
                },
                "transport_zone": {
                    "description": "Data transport zone path for Avi Service Engines. Example- /infra/sites/default/enforcement-points/default/transport-zones/xxx-xxx-xxxx. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "tz_type": {
                    "description": "Data transport zone type overlay or vlan. Enum options - OVERLAY, VLAN. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vlan_segments": {
                    "description": "Data vlan segments path to use for Avi Service Engines. Example- /infra/segments/vlanls. This should be set only when transport zone is of type VLAN. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DnsResolver": {
            "type": "object",
            "required": [
                "resolver_name"
            ],
            "properties": {
                "fixed_ttl": {
                    "description": "If configured, this value used for refreshing the DNS entries.Overrides both received_ttl and min_ttl. The entries are refreshed only on fixed_ttleven when received_ttl is less than fixed_ttl. Allowed values are 5-2147483647. Field introduced in 20.1.5. Unit is SEC. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "format": "int32"
                },
                "min_ttl": {
                    "description": "If configured, the min_ttl overrides the ttl from responses when ttl < min_ttl,effectively ttl = max(recieved_ttl, min_ttl). Allowed values are 5-2147483647. Field introduced in 20.1.5. Unit is SEC. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 5,
                    "format": "int32"
                },
                "nameserver_ips": {
                    "description": "Name server IPv4 addresses. Field introduced in 20.1.5. Minimum of 1 items required. Maximum of 10 items allowed. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IpAddr"
                    }
                },
                "resolver_name": {
                    "description": "Unique name for resolver config. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "use_mgmt": {
                    "description": "If enabled, DNS resolution is performed via management network. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                }
            }
        },
        "DockerConfiguration": {
            "type": "object",
            "properties": {
                "app_sync_frequency": {
                    "description": "Sync frequency in seconds with frameworks. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 60,
                    "format": "int32"
                },
                "ca_tls_key_and_certificate_ref": {
                    "description": "UUID of the UCP CA TLS cert and key. It is a reference to an object of type SSLKeyAndCertificate. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "client_tls_key_and_certificate_ref": {
                    "description": "UUID of the client TLS cert and key. It is a reference to an object of type SSLKeyAndCertificate. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "container_port_match_http_service": {
                    "description": "Perform container port matching to create a HTTP Virtualservice instead of a TCP/UDP VirtualService. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "coredump_directory": {
                    "description": "Directory to mount to check for core dumps on Service Engines. This will be mapped read only to /var/crash on any new Service Engines. This is a disruptive change. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "/var/lib/systemd/coredump"
                },
                "disable_auto_backend_service_sync": {
                    "description": "Disable auto service sync for back end services. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "disable_auto_frontend_service_sync": {
                    "description": "Disable auto service sync for front end services. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "disable_auto_se_creation": {
                    "description": "Disable SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "docker_registry_se": {
                    "description": "Docker registry for ServiceEngine image. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/DockerRegistry"
                },
                "east_west_placement_subnet": {
                    "description": "Match against this prefix when placing east-west VSs on SEs . Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddrPrefix"
                },
                "enable_event_subscription": {
                    "description": "Enable Docker event subscription. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "feproxy_container_port_as_service": {
                    "description": "For Front End proxies, use container port as service port. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "feproxy_vips_enable_proxy_arp": {
                    "description": "Enable proxy ARP from Host interface for Front End  proxies. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "fleet_endpoint": {
                    "description": "Optional fleet remote endpoint if fleet is used for SE deployment. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "http_container_ports": {
                    "description": "List of container ports that create a HTTP Virtualservice instead of a TCP/UDP VirtualService. Defaults to 80. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "format": "int32"
                },
                "se_deployment_method": {
                    "description": "Use Fleet/SSH for SE deployment. Enum options - SE_CREATE_FLEET, SE_CREATE_SSH, SE_CREATE_POD. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "SE_CREATE_SSH"
                },
                "se_exclude_attributes": {
                    "description": "Exclude hosts with attributes for SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MesosAttribute"
                    }
                },
                "se_include_attributes": {
                    "description": "Create SEs just on hosts with include attributes. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MesosAttribute"
                    }
                },
                "se_spawn_rate": {
                    "description": "New SE spawn rate per minute. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 25,
                    "format": "int32"
                },
                "se_volume": {
                    "description": "Host volume to be used as a disk for Avi SE, This is a disruptive change. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "/opt/avi"
                },
                "services_accessible_all_interfaces": {
                    "description": "Make service ports accessible on all Host interfaces in addition to East-West VIP and/or bridge IP. Usually enabled AWS clusters to export East-West services on Host interface. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "ssh_user_ref": {
                    "description": "Cloud connector user uuid for SSH to hosts. It is a reference to an object of type CloudConnectorUser. Field introduced in 17.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "ucp_nodes": {
                    "description": "List of Docker UCP nodes; In case of a load balanced UCP cluster, use Virtual IP of the cluster. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "use_container_ip_port": {
                    "description": "Use container IP address port for pool instead of host IP address hostport. This mode is applicable if the container IP is reachable (not a private NATed IP) from other hosts in a routed environment for containers. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "use_controller_image": {
                    "description": "If true, use controller generated SE docker image via fileservice, else use docker repository image as defined by docker_registry_se. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                }
            }
        },
        "DockerRegistry": {
            "type": "object",
            "properties": {
                "oshift_registry": {
                    "description": "Openshift integrated registry config. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/OshiftDockerRegistryMetaData"
                },
                "password": {
                    "description": "Password for docker registry. Authorized 'regular user' password if registry is Openshift integrated registry. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "private": {
                    "description": "Set if docker registry is private. Avi controller will not attempt to push SE image to the registry, unless se_repository_push is set. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "registry": {
                    "description": "Avi ServiceEngine repository name. For private registry, it's registry port/repository, for public registry, it's registry/repository, for openshift registry, it's registry port/namespace/repo. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "avinetworks/se"
                },
                "username": {
                    "description": "Username for docker registry. Authorized 'regular user' if registry is Openshift integrated registry. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "FeProxyRoutePublishConfig": {
            "type": "object",
            "properties": {
                "mode": {
                    "description": "Publish ECMP route to upstream router for VIP. Enum options - FE_PROXY_ROUTE_PUBLISH_NONE, FE_PROXY_ROUTE_PUBLISH_QUAGGA_WEBAPP. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "FE_PROXY_ROUTE_PUBLISH_NONE"
                },
                "publisher_port": {
                    "description": "Listener port for publisher. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 80,
                    "format": "int32"
                },
                "subnet": {
                    "description": "Subnet for publisher. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 32,
                    "format": "int32"
                },
                "token": {
                    "description": "Token for tracking changes. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "GCPConfiguration": {
            "type": "object",
            "required": [
                "network_config",
                "region_name",
                "se_project_id",
                "vip_allocation_strategy",
                "zones"
            ],
            "properties": {
                "cloud_credentials_ref": {
                    "description": "Credentials to access Google Cloud Platform APIs. It is a reference to an object of type CloudConnectorUser. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "encryption_keys": {
                    "description": "Encryption Keys for Google Cloud Services. Field introduced in 18.2.10, 20.1.2. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/GCPEncryptionKeys"
                },
                "firewall_target_tags": {
                    "description": "Firewall rule network target tags which will be applied on Service Engines to allow ingress and egress traffic for Service Engines. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gcp_service_account_email": {
                    "description": "Email of GCP Service Account to be associated to the Service Engines. Field introduced in 20.1.7, 21.1.2. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "gcs_bucket_name": {
                    "description": "Google Cloud Storage Bucket Name where Service Engine image will be uploaded. This image will be deleted once the image is created in Google compute images. By default, a bucket will be created if this field is not specified. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "gcs_project_id": {
                    "description": "Google Cloud Storage Project ID where Service Engine image will be uploaded. This image will be deleted once the image is created in Google compute images. By default, Service Engine Project ID will be used. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "network_config": {
                    "description": "Google Cloud Platform VPC Network configuration for the Service Engines. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/GCPNetworkConfig"
                },
                "region_name": {
                    "description": "Google Cloud Platform Region Name where Service Engines will be spawned. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_project_id": {
                    "description": "Google Cloud Platform Project ID where Service Engines will be spawned. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vip_allocation_strategy": {
                    "description": "VIP allocation strategy defines how the VIPs will be created in Google Cloud. Field introduced in 18.2.9, 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/GCPVIPAllocation"
                },
                "zones": {
                    "description": "Google Cloud Platform Zones where Service Engines will be distributed for HA. Field introduced in 18.2.1. Minimum of 1 items required. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "GCPEncryptionKeys": {
            "type": "object",
            "properties": {
                "gcs_bucket_kms_key_id": {
                    "description": "CMEK Resource ID to encrypt Google Cloud Storage Bucket. This Bucket is used to upload Service Engine raw image. Field introduced in 18.2.10, 20.1.2. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "gcs_objects_kms_key_id": {
                    "description": "CMEK Resource ID to encrypt Service Engine raw image. The raw image is a Google Cloud Storage Object. Field introduced in 18.2.10, 20.1.2. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_disk_kms_key_id": {
                    "description": "CMEK Resource ID to encrypt Service Engine Disks. Field introduced in 18.2.10, 20.1.2. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_image_kms_key_id": {
                    "description": "CMEK Resource ID to encrypt Service Engine GCE Image. Field introduced in 18.2.10, 20.1.2. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "GCPInBandManagement": {
            "type": "object",
            "required": [
                "vpc_network_name",
                "vpc_subnet_name"
            ],
            "properties": {
                "vpc_network_name": {
                    "description": "Service Engine Network Name. Field introduced in 18.2.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vpc_project_id": {
                    "description": "Project ID of the Service Engine Network. By default, Service Engine Project ID will be used. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vpc_subnet_name": {
                    "description": "Service Engine Network Subnet Name. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "GCPNetworkConfig": {
            "type": "object",
            "required": [
                "config"
            ],
            "properties": {
                "config": {
                    "description": "Config Mode for Google Cloud network configuration. Enum options - INBAND_MANAGEMENT, ONE_ARM_MODE, TWO_ARM_MODE. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "inband": {
                    "description": "Configure InBand Management as Google Cloud network configuration. In this configuration the data network and management network for Service Engines will be same. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/GCPInBandManagement"
                },
                "one_arm": {
                    "description": "Configure One Arm Mode as Google Cloud network configuration. In this configuration the data network and the management network for the Service Engines will be separated. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/GCPOneArmMode"
                },
                "two_arm": {
                    "description": "Configure Two Arm Mode as Google Cloud network configuration. In this configuration the frontend data network, backend data network and the management network for the Service Engines will be separated. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/GCPTwoArmMode"
                }
            }
        },
        "GCPOneArmMode": {
            "type": "object",
            "required": [
                "data_vpc_network_name",
                "data_vpc_subnet_name",
                "management_vpc_network_name",
                "management_vpc_subnet_name"
            ],
            "properties": {
                "data_vpc_network_name": {
                    "description": "Service Engine Data Network Name. Field introduced in 18.2.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "data_vpc_project_id": {
                    "description": "Project ID of the Service Engine Data Network. By default, Service Engine Project ID will be used. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "data_vpc_subnet_name": {
                    "description": "Service Engine Data Network Subnet Name. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "management_vpc_network_name": {
                    "description": "Service Engine Management Network Name. Field introduced in 18.2.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "management_vpc_project_id": {
                    "description": "Project ID of the Service Engine Management Network. By default, Service Engine Project ID will be used. Field introduced in 21.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "management_vpc_subnet_name": {
                    "description": "Service Engine Management Network Subnet Name. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "GCPTwoArmMode": {
            "type": "object",
            "required": [
                "backend_data_vpc_network_name",
                "backend_data_vpc_subnet_name",
                "frontend_data_vpc_network_name",
                "frontend_data_vpc_subnet_name",
                "management_vpc_network_name",
                "management_vpc_subnet_name"
            ],
            "properties": {
                "backend_data_vpc_network_name": {
                    "description": "Service Engine Backend Data Network Name. Field introduced in 18.2.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "backend_data_vpc_project_id": {
                    "description": "Project ID of the Service Engine Backend Data Network. By default, Service Engine Project ID will be used. Field introduced in 21.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "backend_data_vpc_subnet_name": {
                    "description": "Service Engine Backend Data Network Subnet Name. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "frontend_data_vpc_network_name": {
                    "description": "Service Engine Frontend Data Network Name. Field introduced in 18.2.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "frontend_data_vpc_project_id": {
                    "description": "Project ID of the Service Engine Frontend Data Network. By default, Service Engine Project ID will be used. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "frontend_data_vpc_subnet_name": {
                    "description": "Service Engine Frontend Data Network Subnet Name. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "management_vpc_network_name": {
                    "description": "Service Engine Management Network Name. Field introduced in 18.2.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "management_vpc_project_id": {
                    "description": "Project ID of the Service Engine Management Network. By default, Service Engine Project ID will be used. Field introduced in 21.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "management_vpc_subnet_name": {
                    "description": "Service Engine Management Network Subnet Name. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "GCPVIPAllocation": {
            "type": "object",
            "required": [
                "mode"
            ],
            "properties": {
                "ilb": {
                    "description": "Configure Google Cloud Internal LoadBalancer for VIP. The VIP will be auto allocated from a Google Cloud VPC Subnet. Field introduced in 18.2.9, 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/GCPVIPILB"
                },
                "mode": {
                    "description": "VIP Allocation Mode. Enum options - ROUTES, ILB. Field introduced in 18.2.9, 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "ROUTES"
                },
                "routes": {
                    "description": "Configure Google Cloud VPC Routes for VIP. The VIP can either be a static IP or auto allocted from AVI Internal Network. The VIP should not overlap with any of the subnet ranges in Google Cloud VPC. Field introduced in 18.2.9, 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/GCPVIPRoutes"
                }
            }
        },
        "GCPVIPILB": {
            "type": "object",
            "properties": {
                "cloud_router_names": {
                    "description": "Google Cloud Router Names to advertise BYOIP. Field introduced in 18.2.9, 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "GCPVIPRoutes": {
            "type": "object",
            "properties": {
                "match_se_group_subnet": {
                    "description": "Match SE group subnets for VIP placement. Default is to not match SE group subnets. Field introduced in 18.2.9, 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "route_priority": {
                    "description": "Priority of the routes created in GCP. Field introduced in 20.1.7, 21.1.2. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 2000,
                    "format": "int32"
                }
            }
        },
        "HostAttributes": {
            "type": "object",
            "required": [
                "attr_key"
            ],
            "properties": {
                "attr_key": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "attr_val": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "IngAttribute": {
            "type": "object",
            "properties": {
                "attribute": {
                    "description": "Attribute to match. Field introduced in 17.2.15, 18.1.5, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "value": {
                    "description": "Attribute value. If not set, match any value. Field introduced in 17.2.15, 18.1.5, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "IpAddr": {
            "type": "object",
            "required": [
                "addr",
                "type"
            ],
            "properties": {
                "addr": {
                    "description": "IP address. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "type": {
                    "description": " Enum options - V4, DNS, V6. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "IpAddrPrefix": {
            "type": "object",
            "required": [
                "ip_addr",
                "mask"
            ],
            "properties": {
                "ip_addr": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddr"
                },
                "mask": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "LinuxServerConfiguration": {
            "type": "object",
            "properties": {
                "hosts": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinuxServerHost"
                    }
                },
                "se_inband_mgmt": {
                    "description": "Flag to notify the SE's in this cloud have an inband management interface, this can be overridden at SE host level by setting host_attr attr_key as SE_INBAND_MGMT with value of true or false. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "se_log_disk_path": {
                    "description": "SE Client Logs disk path for cloud. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_log_disk_size_GB": {
                    "description": "SE Client Log disk size for cloud. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 5,
                    "format": "int32"
                },
                "se_sys_disk_path": {
                    "description": "SE System Logs disk path for cloud. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_sys_disk_size_GB": {
                    "description": "SE System Logs disk size for cloud. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 10,
                    "format": "int32"
                },
                "ssh_user_ref": {
                    "description": "Cloud connector user uuid for SSH to hosts. It is a reference to an object of type CloudConnectorUser. Field introduced in 17.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "LinuxServerHost": {
            "type": "object",
            "required": [
                "host_ip"
            ],
            "properties": {
                "host_attr": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HostAttributes"
                    }
                },
                "host_ip": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddr"
                },
                "node_availability_zone": {
                    "description": "Node's availability zone. ServiceEngines belonging to the availability zone will be rebooted during a manual DR failover. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_group_ref": {
                    "description": "The SE Group association for the SE. If None, then 'Default-Group' SEGroup is associated with the SE. It is a reference to an object of type ServiceEngineGroup. Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "ManagementNetworkConfig": {
            "type": "object",
            "required": [
                "transport_zone",
                "tz_type"
            ],
            "properties": {
                "overlay_segment": {
                    "description": "Management overlay segment to use for Avi Service Engines. This should be set only when transport zone is of type OVERLAY. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/Tier1LogicalRouterInfo"
                },
                "transport_zone": {
                    "description": "Management transport zone path for Avi Service Engines. Example- /infra/sites/default/enforcement-points/default/transport-zones/xxx-xxx-xxxx. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "tz_type": {
                    "description": "Management transport zone type overlay or vlan. Enum options - OVERLAY, VLAN. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vlan_segment": {
                    "description": "Management vlan segment path to use for Avi Service Engines. Example- /infra/segments/vlanls. This should be set only when transport zone is of type VLAN. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "MarathonConfiguration": {
            "type": "object",
            "properties": {
                "framework_tag": {
                    "description": "Framework tag to be used in Virtualservice name. Default is framework name from Mesos. If this tag is altered atruntime, Virtualservices will be deleted and re-created. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "marathon_password": {
                    "description": "Password for Marathon authentication. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "marathon_url": {
                    "description": "Marathon API URL of the form http //host port. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "http://leader.mesos:8080"
                },
                "marathon_username": {
                    "description": "Username for Marathon authentication. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "private_port_range": {
                    "description": "Private port range allocated to this Marathon framework instance. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/PortRange"
                },
                "public_port_range": {
                    "description": "Public port range allocated to this Marathon framework instance. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/PortRange"
                },
                "tenant": {
                    "description": "Tenant to pin this Marathon instance to. If set, a tenant object will be created in Avi bearing this name and all applications created in this marathon will be associated with this tenant regardless of, if any, tenant configuration in marathon label for this application. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "admin"
                },
                "use_token_auth": {
                    "description": "Use Token based authentication instead of basic authentication. Token is refreshed every 5 minutes. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "vs_name_tag_framework": {
                    "description": "Tag VS name with framework name or framework_tag. Useful in deployments with multiple frameworks. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                }
            }
        },
        "MarathonSeDeployment": {
            "type": "object",
            "properties": {
                "docker_image": {
                    "description": "Docker image to be used for Avi SE installation e.g. fedora, ubuntu. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "fedora"
                },
                "host_os": {
                    "description": "Host OS distribution e.g. COREOS, UBUNTU, REDHAT. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "COREOS"
                },
                "resource_roles": {
                    "description": "Accepted resource roles for SEs. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uris": {
                    "description": "URIs to be resolved for starting the application. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "MesosAttribute": {
            "type": "object",
            "required": [
                "attribute"
            ],
            "properties": {
                "attribute": {
                    "description": "Attribute to match. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "value": {
                    "description": "Attribute value. If not set, match any value. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "MesosConfiguration": {
            "type": "object",
            "properties": {
                "all_vses_are_feproxy": {
                    "description": "Consider all Virtualservices as Front End Proxies. Front End proxies are placed on specific SEs as opposed to Back End proxies placed on all SEs. Applicable where each service has its own VIP and VIP is reachable from anywhere. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "app_sync_frequency": {
                    "description": "Sync frequency in seconds with frameworks. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 60,
                    "format": "int32"
                },
                "container_port_match_http_service": {
                    "description": "Perform container port matching to create a HTTP Virtualservice instead of a TCP/UDP VirtualService. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "coredump_directory": {
                    "description": "Directory to mount to check for core dumps on Service Engines. This will be mapped read only to /var/crash on any new Service Engines. This is a disruptive change. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "/var/lib/systemd/coredump"
                },
                "disable_auto_backend_service_sync": {
                    "description": "Disable auto service sync for back end services. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "disable_auto_frontend_service_sync": {
                    "description": "Disable auto service sync for front end services. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "disable_auto_gs_sync": {
                    "description": "Disable auto sync for GSLB services. Field introduced in 17.1.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "disable_auto_se_creation": {
                    "description": "Disable SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "docker_registry_se": {
                    "description": "Docker registry for ServiceEngine image. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/DockerRegistry"
                },
                "east_west_placement_subnet": {
                    "description": "Match against this prefix when placing east-west VSs on SEs (Mesos mode only). Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddrPrefix"
                },
                "enable_event_subscription": {
                    "description": "Enable Marathon event subscriptions. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "feproxy_bridge_name": {
                    "description": "Name of second Linux bridge on Host providing connectivity for Front End proxies. This is a disruptive change. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "cbr1"
                },
                "feproxy_container_port_as_service": {
                    "description": "For Front End proxies, use container port as service port. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "feproxy_route_publish": {
                    "description": "Publish ECMP route to upstream router for VIP. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/FeProxyRoutePublishConfig"
                },
                "feproxy_vips_enable_proxy_arp": {
                    "description": "Enable proxy ARP from Host interface for Front End  proxies. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "fleet_endpoint": {
                    "description": "Optional fleet remote endpoint if fleet is used for SE deployment. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "http_container_ports": {
                    "description": "List of container ports that create a HTTP Virtualservice instead of a TCP/UDP VirtualService. Defaults to 80. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "format": "int32"
                },
                "marathon_configurations": {
                    "description": "List of Marathon frameworks. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MarathonConfiguration"
                    }
                },
                "marathon_se_deployment": {
                    "description": "Options for Marathon SE deployment. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/MarathonSeDeployment"
                },
                "mesos_url": {
                    "description": "Mesos URL of the form http //host port. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "http://leader.mesos:5050"
                },
                "node_availability_zone_label": {
                    "description": "Mesos Node label to be used as Mesos Node's availability zone in a dual availability zone deployment. ServiceEngines belonging to the availability zone will be rebooted during a manual DR failover. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "nuage_controller": {
                    "description": "Nuage Overlay SDN Controller information. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/NuageSDNController"
                },
                "se_deployment_method": {
                    "description": "Use Fleet/SSH for deploying Service Engines. Enum options - MESOS_SE_CREATE_FLEET, MESOS_SE_CREATE_SSH, MESOS_SE_CREATE_MARATHON. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "MESOS_SE_CREATE_FLEET"
                },
                "se_exclude_attributes": {
                    "description": "Exclude hosts with attributes for SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MesosAttribute"
                    }
                },
                "se_include_attributes": {
                    "description": "Create SEs just on hosts with include attributes. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MesosAttribute"
                    }
                },
                "se_resources": {
                    "description": "Obsolete - ignored. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MesosSeResources"
                    }
                },
                "se_spawn_rate": {
                    "description": "New SE spawn rate per minute. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 25,
                    "format": "int32"
                },
                "se_volume": {
                    "description": "Host volume to be used as a disk for Avi SE, This is a disruptive change. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "/opt/avi/se"
                },
                "services_accessible_all_interfaces": {
                    "description": "Make service ports accessible on all Host interfaces in addition to East-West VIP and/or bridge IP. Usually enabled AWS Mesos clusters to export East-West services on Host interface. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "ssh_user_ref": {
                    "description": "Cloud connector user uuid for SSH to hosts. It is a reference to an object of type CloudConnectorUser. Field introduced in 17.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "use_bridge_ip_as_vip": {
                    "description": "Use Bridge IP on each Host as VIP. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "use_container_ip_port": {
                    "description": "Use container IP address port for pool instead of host IP address hostport. This mode is applicable if the container IP is reachable (not a private NATed IP) from other hosts in a routed environment for containers. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "use_controller_image": {
                    "description": "If true, use controller generated SE docker image via fileservice, else use docker repository image as defined by docker_registry_se. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "use_vips_for_east_west_services": {
                    "description": "Use unique virtual IP address for every east west service in Mesos/Marathon. 'use_bridge_ip_as_vip' and 'vip' fields , if set, will not be used if this field is set. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "vip": {
                    "description": "VIP to be used by all East-West apps on all Hosts. Preferrably use an address from outside the subnet. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddr"
                }
            }
        },
        "MesosSeResources": {
            "type": "object",
            "required": [
                "attribute_key",
                "attribute_value"
            ],
            "properties": {
                "attribute_key": {
                    "description": "Attribute (Fleet or Mesos) key of Hosts. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "attribute_value": {
                    "description": "Attribute (Fleet or Mesos) value of Hosts. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "cpu": {
                    "description": "Obsolete - ignored. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "number",
                    "default": 2.0,
                    "format": "float"
                },
                "memory": {
                    "description": "Obsolete - ignored. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 4096,
                    "format": "int32"
                }
            }
        },
        "NsxtConfiguration": {
            "type": "object",
            "properties": {
                "automate_dfw_rules": {
                    "description": "Automatically create DFW rules for VirtualService in NSX-T Manager. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Basic edition(Allowed values- false), Essentials, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "data_network_config": {
                    "description": "Data network configuration for Avi Service Engines. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/DataNetworkConfig"
                },
                "domain_id": {
                    "description": "Domain where NSGroup objects belongs to. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "default"
                },
                "enforcementpoint_id": {
                    "description": "Enforcement point is where the rules of a policy to apply. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "default"
                },
                "management_network_config": {
                    "description": "Management network configuration for Avi Service Engines. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/ManagementNetworkConfig"
                },
                "nsxt_credentials_ref": {
                    "description": "Credentials to access NSX-T manager. It is a reference to an object of type CloudConnectorUser. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "nsxt_url": {
                    "description": "NSX-T manager hostname or IP address. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "site_id": {
                    "description": "Site where transport zone belongs to. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "default"
                },
                "vmc_mode": {
                    "description": "VMC mode. Field introduced in 23.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "vpc_mode": {
                    "description": "VPC Mode. Field introduced in 23.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                }
            }
        },
        "NsxtTier1SegmentAutomaticMode": {
            "type": "object",
            "required": [
                "nsxt_segment_subnet"
            ],
            "properties": {
                "nsxt_segment_subnet": {
                    "description": "Uber IP subnet for the logical segments created automatically by Avi controller. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddrPrefix"
                },
                "num_se_per_segment": {
                    "description": "The number of SE data vNic's that can be connected to the Avi logical segment. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 16,
                    "format": "int32"
                },
                "tier1_lr_ids": {
                    "description": "Tier1 logical router IDs. Field introduced in 20.1.1. Minimum of 1 items required. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "NsxtTier1SegmentConfig": {
            "type": "object",
            "required": [
                "segment_config_mode"
            ],
            "properties": {
                "automatic": {
                    "description": "Avi controller creates and manages logical segments for a Tier-1 LR. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/NsxtTier1SegmentAutomaticMode"
                },
                "manual": {
                    "description": "Avi Admin selects an available logical segment (created by NSX-T admin) associated with a Tier-1 LR. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/NsxtTier1SegmentManualMode"
                },
                "segment_config_mode": {
                    "description": "Config Mode for selecting the placement logical segments for Avi ServiceEngine data path. Enum options - TIER1_SEGMENT_MANUAL, TIER1_SEGMENT_AUTOMATIC. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Basic edition(Allowed values- TIER1_SEGMENT_MANUAL), Essentials, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "TIER1_SEGMENT_MANUAL"
                }
            }
        },
        "NsxtTier1SegmentManualMode": {
            "type": "object",
            "properties": {
                "tier1_lrs": {
                    "description": "Tier1 logical router placement information. Field introduced in 20.1.1. Minimum of 1 items required. Maximum of 256 items allowed. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tier1LogicalRouterInfo"
                    }
                }
            }
        },
        "NTPAuthenticationKey": {
            "type": "object",
            "required": [
                "key",
                "key_number"
            ],
            "properties": {
                "algorithm": {
                    "description": "Message Digest Algorithm used for NTP authentication. Default is NTP_AUTH_ALGORITHM_MD5. Enum options - NTP_AUTH_ALGORITHM_MD5, NTP_AUTH_ALGORITHM_SHA1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "NTP_AUTH_ALGORITHM_MD5"
                },
                "key": {
                    "description": "NTP Authentication key. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "key_number": {
                    "description": "Key number to be assigned to the authentication-key. Allowed values are 1-65534. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "NTPConfiguration": {
            "type": "object",
            "properties": {
                "ntp_authentication_keys": {
                    "description": "NTP Authentication keys. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NTPAuthenticationKey"
                    }
                },
                "ntp_server_list": {
                    "description": "List of NTP server hostnames or IP addresses. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IpAddr"
                    }
                },
                "ntp_servers": {
                    "description": "List of NTP Servers. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NTPServer"
                    }
                }
            }
        },
        "NTPServer": {
            "type": "object",
            "required": [
                "server"
            ],
            "properties": {
                "key_number": {
                    "description": "Key number from the list of trusted keys used to authenticate this server. Allowed values are 1-65534. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "format": "int32"
                },
                "server": {
                    "description": "IP Address of the NTP Server. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddr"
                }
            }
        },
        "NuageSDNController": {
            "type": "object",
            "properties": {
                "nuage_organization": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "nuage_password": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "nuage_port": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 8443,
                    "format": "int32"
                },
                "nuage_username": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "nuage_vsd_host": {
                    "description": "Nuage VSD host name or IP address. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_domain": {
                    "description": "Domain to be used for SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_enterprise": {
                    "description": "Enterprise to be used for SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_network": {
                    "description": "Network to be used for SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_policy_group": {
                    "description": "Policy Group to be used for SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_user": {
                    "description": "User to be used for SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_zone": {
                    "description": "Zone to be used for SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "OpenStackConfiguration": {
            "type": "object",
            "required": [
                "admin_tenant",
                "mgmt_network_name",
                "privilege",
                "username"
            ],
            "properties": {
                "admin_tenant": {
                    "description": "OpenStack admin tenant (or project) information. For Keystone v3, provide the project information in project@domain format. Domain need not be specified if the project belongs to the 'Default' domain. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "admin_tenant_uuid": {
                    "description": "admin-tenant's UUID in OpenStack. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "allowed_address_pairs": {
                    "description": "If false, allowed-address-pairs extension will not be used. . Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "anti_affinity": {
                    "description": "If true, an anti-affinity policy will be applied to all SEs of a SE-Group, else no such policy will be applied. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "auth_url": {
                    "description": "Auth URL for connecting to keystone. If this is specified, any value provided for keystone_host is ignored. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "config_drive": {
                    "description": "If false, metadata service will be used instead of  config-drive functionality to retrieve SE VM metadata. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "contrail_disable_policy": {
                    "description": "When set to True, the VIP and Data ports will be programmed to set virtual machine interface disable-policy. Please refer Contrail documentation for more on disable-policy. Field introduced in 18.1.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "contrail_endpoint": {
                    "description": "Contrail VNC endpoint url (example http //10.10.10.100 8082). By default, 'http //' scheme and 8082 port will be used if not provided in the url. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "contrail_plugin": {
                    "description": "Enable Contrail plugin mode. (deprecated). Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "custom_se_image_properties": {
                    "description": "Custom image properties to be set on a Service Engine image. Only hw_vif_multiqueue_enabled property is supported. Other properties will be ignored. Field introduced in 18.2.7, 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Property"
                    }
                },
                "enable_os_object_caching": {
                    "description": "When enabled, frequently used objects like networks, subnets, routers etc. are cached to improve performance and reduce load on OpenStack Controllers. Suitable for OpenStack environments where Neutron resources are not frequently created, updated, or deleted.The cache is refreshed when cloud GC API is issued. Field introduced in 21.1.5, 22.1.2. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "enable_tagging": {
                    "description": "When set to True, OpenStack resources created by Avi are tagged with Avi Cloud UUID. Field introduced in 21.1.5, 22.1.2. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "external_networks": {
                    "description": "If True, allow selection of networks marked as 'external' for management,  vip or data networks. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "free_floatingips": {
                    "description": "Free unused floating IPs. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "hypervisor": {
                    "description": "Default hypervisor type, only KVM is supported. Enum options - DEFAULT, VMWARE_ESX, KVM, VMWARE_VSAN, XEN. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "KVM"
                },
                "hypervisor_properties": {
                    "description": "Custom properties per hypervisor type. Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OpenStackHypervisorProperties"
                    }
                },
                "img_format": {
                    "description": "If OS_IMG_FMT_RAW, use RAW images else use QCOW2 for KVM. Enum options - OS_IMG_FMT_AUTO, OS_IMG_FMT_QCOW2, OS_IMG_FMT_VMDK, OS_IMG_FMT_RAW, OS_IMG_FMT_FLAT. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "OS_IMG_FMT_AUTO"
                },
                "import_keystone_tenants": {
                    "description": "Import keystone tenants list into Avi. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "insecure": {
                    "description": "Allow self-signed certificates when communicating with https service endpoints. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "keystone_host": {
                    "description": "Keystone's hostname or IP address. (Deprecated) Use auth_url instead. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "map_admin_to_cloudadmin": {
                    "description": "If True, map Avi 'admin' tenant to the admin_tenant of the Cloud. Else map Avi 'admin' to OpenStack 'admin' tenant. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "mgmt_network_name": {
                    "description": "Avi Management network name or cidr. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "mgmt_network_uuid": {
                    "description": "Management network UUID. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "name_owner": {
                    "description": "If True, embed owner info in VIP port 'name', else embed owner info in 'device_id' field. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "neutron_rbac": {
                    "description": "If True, enable neutron rbac discovery of networks shared across tenants/projects. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "password": {
                    "description": "The password Avi Vantage will use when authenticating to Keystone. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "privilege": {
                    "description": "Access privilege. Enum options - NO_ACCESS, READ_ACCESS, WRITE_ACCESS. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "prov_name": {
                    "description": "LBaaS provider name. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "provider_vip_networks": {
                    "description": "A tenant can normally use its own networks and any networks shared with it. In addition, this setting provides extra networks that are usable by tenants. Field introduced in 18.1.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OpenStackVipNetwork"
                    }
                },
                "region": {
                    "description": "Region name. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "role_mapping": {
                    "description": "Defines the mapping from OpenStack role names to avi local role names. For an OpenStack role, this mapping is consulted only if there is no local Avi role with the same name as the OpenStack role. This is an ordered list and only the first matching entry is used. You can use '*' to match all OpenStack role names. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OpenStackRoleMapping"
                    }
                },
                "security_groups": {
                    "description": "If false, security-groups extension will not be used. . Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "tenant_se": {
                    "description": "If true, then SEs will be created in the appropriate tenants, else SEs will be created in the admin_tenant. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "use_admin_url": {
                    "description": "If admin URLs are either inaccessible or not to be accessed from Avi Controller, then set this to False. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "use_internal_endpoints": {
                    "description": "Use internalURL for OpenStack endpoints instead of the default publicURL endpoints. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "use_keystone_auth": {
                    "description": "Use keystone for user authentication. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "username": {
                    "description": "The username Avi Vantage will use when authenticating to Keystone. For Keystone v3, provide the user information in user@domain format, unless that user belongs to the Default domain. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vip_port_in_admin_tenant": {
                    "description": "When set to True, VIP ports are created in OpenStack tenant configured as admin_tenant in cloud. Otherwise, default behavior is to create VIP ports in user tenant. Field introduced in 21.1.5, 22.1.2. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                }
            }
        },
        "OpenStackHypervisorProperties": {
            "type": "object",
            "required": [
                "hypervisor"
            ],
            "properties": {
                "hypervisor": {
                    "description": "Hypervisor type. Enum options - DEFAULT, VMWARE_ESX, KVM, VMWARE_VSAN, XEN. Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "image_properties": {
                    "description": "Custom properties to be associated with the SE image in Glance for this hypervisor type. Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Property"
                    }
                }
            }
        },
        "OpenStackRoleMapping": {
            "type": "object",
            "required": [
                "avi_role",
                "os_role"
            ],
            "properties": {
                "avi_role": {
                    "description": "Role name in Avi. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "os_role": {
                    "description": "Role name in OpenStack. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "OpenStackVipNetwork": {
            "type": "object",
            "properties": {
                "os_network_uuid": {
                    "description": "Neutron network UUID. Field introduced in 18.1.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "os_tenant_uuids": {
                    "description": "UUIDs of OpenStack tenants that should be allowed to use the specified Neutron network for VIPs. Use '*' to make this network available to all tenants. Field introduced in 18.1.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "OshiftDockerRegistryMetaData": {
            "type": "object",
            "properties": {
                "registry_namespace": {
                    "description": "Namespace for the ServiceEngine image to be hosted in Openshift Integrated registry. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "default"
                },
                "registry_service": {
                    "description": "Name of the Integrated registry Service in Openshift. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "docker-registry"
                },
                "registry_vip": {
                    "description": "Static VIP for 'docker-registry' service in Openshift if Avi is proxying for this service.This VIP should be outside the cluster IP subnet in Kubernetes and within the subnet configured (but outside the available pool of IPs) in the East West IPAM profile configuration for this Cloud. For example, if kubernetes cluster VIP range is 172.30.0.0/16 and subnet configured in East West IPAM profile is 172.50.0.0/16, then 172.50.0.2 can be used for this vip and IP pool can start from 172.50.0.3 onwards. Use this static VIP in '--insecure-registry <this-vip> 5000' docker config if using an insecure registry or add this to the list of IPs/hostnames when generating certificates if using a secure TLS registry. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddr"
                }
            }
        },
        "OShiftK8SConfiguration": {
            "type": "object",
            "properties": {
                "app_sync_frequency": {
                    "description": "Sync frequency in seconds with frameworks. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 300,
                    "format": "int32"
                },
                "auto_assign_fqdn": {
                    "description": "Auto assign FQDN to a virtual service if a valid FQDN is not configured. Field introduced in 17.2.8. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "avi_bridge_subnet": {
                    "description": "Avi Linux bridge subnet on OpenShift/K8s nodes. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddrPrefix"
                },
                "ca_tls_key_and_certificate_ref": {
                    "description": "UUID of the UCP CA TLS cert and key. It is a reference to an object of type SSLKeyAndCertificate. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "client_tls_key_and_certificate_ref": {
                    "description": "UUID of the client TLS cert and key instead of service account token. One of client certificate or token is required. It is a reference to an object of type SSLKeyAndCertificate. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "cluster_tag": {
                    "description": "Openshift/K8S Cluster ID used to uniquely map same named namespaces as tenants in Avi. In order to use more than one OpenShift/K8S cloud on this controller, cluster_tag has to be unique across these clouds. Changing cluster_tag is disruptive as all virtual services in the cloud will be recreated. Field introduced in 17.2.5. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "container_port_match_http_service": {
                    "description": "Perform container port matching to create a HTTP Virtualservice instead of a TCP/UDP VirtualService. By default, ports 80, 8080, 443, 8443 are considered HTTP. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "coredump_directory": {
                    "description": "Directory to mount to check for core dumps on Service Engines. This will be mapped read only to /var/crash on any new Service Engines. This is a disruptive change. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "/var/lib/systemd/coredump"
                },
                "default_service_as_east_west_service": {
                    "description": "If there is no explicit east_west_placement field in virtualservice configuration, treat service as a East-West service; default services such a OpenShift API server do not have virtualservice configuration. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "disable_auto_backend_service_sync": {
                    "description": "Disable auto service sync for back end services. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "disable_auto_frontend_service_sync": {
                    "description": "Disable auto service sync for front end services. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "disable_auto_gs_sync": {
                    "description": "Disable auto sync for GSLB services. Field introduced in 17.1.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "disable_auto_se_creation": {
                    "description": "Disable SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "docker_endpoint": {
                    "description": "Host Docker server UNIX socket endpoint. Field introduced in 17.2.14, 18.1.5, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "/var/run/docker.sock"
                },
                "docker_registry_se": {
                    "description": "Docker registry for ServiceEngine image. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/DockerRegistry"
                },
                "east_west_placement_subnet": {
                    "description": "Match against this prefix when placing east-west VSs on SEs . Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddrPrefix"
                },
                "enable_event_subscription": {
                    "description": "Enable Kubernetes event subscription. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "enable_route_ingress_hardening": {
                    "description": "Knob to turn on adding of HTTP drop rules for host and path combinations in incoming request header, specified as part of Ingress/Route spec. The default state is to enable this behavior. Note  Toggling this knob only affects any new routes/ingresses, existing routes/ingresses present in Avi will continue to function as-is. Field introduced in 18.2.6. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "feproxy_vips_enable_proxy_arp": {
                    "description": "Enable proxy ARP from Host interface for Front End  proxies. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "http_container_ports": {
                    "description": "List of container ports that create a HTTP Virtualservice instead of a TCP/UDP VirtualService. Defaults to 80, 8080, 443 and 8443. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "format": "int32"
                },
                "ing_exclude_attributes": {
                    "description": "Do not sync applications only for ingress that have these exclude attributes configured. Field introduced in 17.2.15, 18.1.5, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IngAttribute"
                    }
                },
                "ing_include_attributes": {
                    "description": "Sync applications only for ingress objects that have these include attributes configured. Default values are populated for this field if not provided. The default value are  'attribute'  'kubernetes.io/ingress.class', 'value' 'avi'. Field introduced in 17.2.15, 18.1.5, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IngAttribute"
                    }
                },
                "l4_health_monitoring": {
                    "description": "Perform Layer4 (TCP/UDP) health monitoring even for Layer7 (HTTP) Pools. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "master_nodes": {
                    "description": "List of OpenShift/Kubernetes master nodes; In case of a load balanced OpenShift/K8S cluster, use Virtual IP of the cluster. Each node is of the form node 8443 or http //node 8080. If scheme is not provided, https is assumed. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "node_availability_zone_label": {
                    "description": "OpenShift/K8S Node label to be used as OpenShift/K8S Node's availability zone in a dual availability zone deployment. ServiceEngines belonging to the availability zone will be rebooted during a manual DR failover. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "ns_exclude_attributes": {
                    "description": "Syncing of applications is disabled only for namespaces/projects that have these exclude attributes configured. If there are apps synced already for these namespaces, they will be removed from Avi. Field introduced in 17.1.9,17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MesosAttribute"
                    }
                },
                "ns_include_attributes": {
                    "description": "Sync applications only for namespaces/projects that have these include attributes configured. Field introduced in 17.1.9,17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MesosAttribute"
                    }
                },
                "num_shards": {
                    "description": "Enables sharding of Routes and Ingresses to this number (if non zero) of virtual services in the admin tenant per SEGroup. Sharding is done by hashing on the namespace of the Ingress/Route object. This knob is valid only if shared_virtualservice_namespace flag is set. Field introduced in 18.2.5. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "format": "int32"
                },
                "override_service_ports": {
                    "description": "Override Service Ports with well known ports (80/443) for http/https Route/Ingress VirtualServices. Field introduced in 17.2.12,18.1.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "persistent_volume_claim": {
                    "description": "Persistent Volume Claim name to be used for persistent storage for Avi service engines. This could be used in scenarios where host based volumes are ephemeral. Refer https //kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims for more details on the usage of this field. Field introduced in 18.2.6. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "routes": {
                    "description": "Routes support adding routes to a particular namespace routing table in Openshift/K8s cluster. Each route is a combination of subnet and nexthop ip address or nexthop interface name, and a enum type is used to distinguish an entry in the host (default behaviour) or in the container/pod or in other namespace. This knob should be enabled in the following cases  1. Forwarding the network packets to the same network interface from where it came from in the OpenShift/K8s node. 2. OpenShift/K8s Node connected to the Internet via multiple network interfaces on different networks/ISPs.3. Handling North-South traffic originating from with in the node when the default gateway for outgoing traffic of vs is configured.4. Handling the container/pod traffic by adding the routes in the container/pod. Field introduced in 18.2.6. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RouteInfo"
                    }
                },
                "sdn_overlay": {
                    "description": "Cluster uses overlay based SDN. Enable this flag if cluster uses a overlay based SDN for OpenShift, Flannel, Weave, Nuage. Disable for routed mode. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "se_deployment_method": {
                    "description": "Use SSH/Pod for SE deployment. Enum options - SE_CREATE_FLEET, SE_CREATE_SSH, SE_CREATE_POD. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "SE_CREATE_POD"
                },
                "se_exclude_attributes": {
                    "description": "Exclude hosts with attributes for SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MesosAttribute"
                    }
                },
                "se_image_pull_secret": {
                    "description": "OpenShift/K8S secret name to be used for private docker repos when deploying SE as a Pod. Reference Link  https //kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/. Field introduced in 17.2.13,18.1.3,18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_include_attributes": {
                    "description": "Create SEs just on hosts with include attributes. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MesosAttribute"
                    }
                },
                "se_namespace": {
                    "description": "Kubernetes namespace to be used for deploying Avi service engines. This namespace is used to create daemonsets, service accounts, etc. for Avi only use. Setting this value is a disruptive operation and assumes the namespace exists in kubernetes. 'default' namespace is picked if this field is unset. Field introduced in 18.2.6. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "default"
                },
                "se_pod_tolerations": {
                    "description": "Match SE Pod tolerations against taints of OpenShift/K8S nodes https //kubernetes.io/docs/concepts/configuration/taint-and-toleration/. Field introduced in 17.2.14, 18.1.5, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PodToleration"
                    }
                },
                "se_priority_class": {
                    "description": "Priority class for AVI SEs when running as pods. User is expected to have the priority class (with this name) created in Kubernetes, beforehand. If the priority class doesn't exist while assigning this field, the SE pods may not start. If empty no priority class will be used for deploying SE pods (default behaviour). Field introduced in 18.2.6. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "se_restart_batch_size": {
                    "description": "Restart ServiceEngines by batch on ServiceEngineGroup updates (cpu, memory..etc). Field introduced in 17.2.15, 18.1.5, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 1,
                    "format": "int32"
                },
                "se_restart_force": {
                    "description": "Restart ServiceEngines forcely if VirtualServices failed to migrate to another SE. Field introduced in 17.2.15, 18.1.5, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "se_volume": {
                    "description": "Host volume to be used as a disk for Avi SE, This is a disruptive change. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "/var/lib/avi"
                },
                "secure_egress_mode": {
                    "description": "Allow Avi Vantage to create SecurityContextConstraints and ServiceAccounts which allow Egress Pods to run in privileged mode in an Openshift environment. Enabling this would exclude egress services from 'disable_auto_backend_service_sync' (if set) behaviour. Note  Access credentials must have cluster-admin role privileges. Field introduced in 17.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "service_account_token": {
                    "description": "Authorization token for service account instead of client certificate. One of client certificate or token is required. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "shard_prefix": {
                    "description": "Prefix to be used for Shard VS name when num_shards knob is non zero. Format for Shard VS name will be <shard_prefix>-<idx>-CloudName-SEGroupName. Field introduced in 18.2.5. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "shared_virtualservice_namespace": {
                    "description": "Projects/Namespaces use a shared virtualservice for http/https Routes and Ingress objects unless overriden by the avi_virtualservice  dedicated|shared annotation. Field introduced in 17.1.9,17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "ssh_user_ref": {
                    "description": "Cloud connector user uuid for SSH to hosts. It is a reference to an object of type CloudConnectorUser. Field introduced in 17.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "sync_not_ready_addresses": {
                    "description": "Allow the not_ready_addresses in the kubernetes endpoint object to be added as servers in the AVI pool object. Field introduced in 18.2.5. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "use_controller_image": {
                    "description": "If true, use controller generated SE docker image via fileservice, else use docker repository image as defined by docker_registry_se. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "use_resource_definition_as_ssot": {
                    "description": "Use OpenShift/Kubernetes resource definition and annotations as single-source-of-truth. Any changes made in Avi Controller via UI or CLI will be overridden by values provided in annotations. Field introduced in 17.2.13, 18.1.4, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "use_scheduling_disabled_nodes": {
                    "description": "Enable VirtualService placement on Service Engines on nodes with scheduling disabled. When false, Service Engines are disabled on nodes where scheduling is disabled. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "use_service_cluster_ip_as_ew_vip": {
                    "description": "Use Cluster IP of service as VIP for East-West services; This option requires that kube proxy is disabled on all nodes. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "vip_default_gateway": {
                    "description": "VirtualService default gateway if multiple nics are present in the host. Field introduced in 18.2.2. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddr"
                }
            }
        },
        "OshiftSharedVirtualService": {
            "type": "object",
            "required": [
                "virtualservice_name"
            ],
            "properties": {
                "virtualservice_name": {
                    "description": "Name of shared virtualservice. VirtualService will be created automatically by Cloud Connector. Field introduced in 17.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "PodToleration": {
            "type": "object",
            "properties": {
                "effect": {
                    "description": "Effect to match. Enum options - NO_SCHEDULE, PREFER_NO_SCHEDULE, NO_EXECUTE. Field introduced in 17.2.14, 18.1.5, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "key": {
                    "description": "Key to match. Field introduced in 17.2.14, 18.1.5, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "operator": {
                    "description": "Operator to match. Enum options - EQUAL, EXISTS. Field introduced in 17.2.14, 18.1.5, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "EQUAL"
                },
                "toleration_seconds": {
                    "description": "Pods that tolerate the taint with a specified toleration_seconds remain bound for the specified amount of time. Field introduced in 17.2.14, 18.1.5, 18.2.1. Unit is SECONDS. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "format": "int32"
                },
                "value": {
                    "description": "Value to match. Field introduced in 17.2.14, 18.1.5, 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "PortRange": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "end": {
                    "description": "TCP/UDP port range end (inclusive). Allowed values are 1-65535. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "format": "int32"
                },
                "start": {
                    "description": "TCP/UDP port range start (inclusive). Allowed values are 1-65535. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Property": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "Property name. Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "value": {
                    "description": "Property value. Field introduced in 17.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "ProxyConfiguration": {
            "type": "object",
            "required": [
                "host",
                "port"
            ],
            "properties": {
                "host": {
                    "description": "Proxy hostname or IP address. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "password": {
                    "description": "Password for proxy. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "port": {
                    "description": "Proxy port. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "format": "int32"
                },
                "username": {
                    "description": "Username for proxy. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "RancherConfiguration": {
            "type": "object",
            "properties": {
                "access_key": {
                    "description": "Access key. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "app_sync_frequency": {
                    "description": "Sync frequency in seconds with frameworks. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 60,
                    "format": "int32"
                },
                "container_port_match_http_service": {
                    "description": "Perform container port matching to create a HTTP Virtualservice instead of a TCP/UDP VirtualService. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "coredump_directory": {
                    "description": "Directory to mount to check for core dumps on Service Engines. This will be mapped read only to /var/crash on any new Service Engines. This is a disruptive change. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "/var/lib/systemd/coredump"
                },
                "disable_auto_backend_service_sync": {
                    "description": "Disable auto service sync for back end services. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "disable_auto_frontend_service_sync": {
                    "description": "Disable auto service sync for front end services. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "disable_auto_se_creation": {
                    "description": "Disable SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "docker_registry_se": {
                    "description": "Docker registry for ServiceEngine image. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/DockerRegistry"
                },
                "east_west_placement_subnet": {
                    "description": "Match against this prefix when placing east-west VSs on SEs . Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddrPrefix"
                },
                "enable_event_subscription": {
                    "description": "Enable Docker event subscription. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "feproxy_container_port_as_service": {
                    "description": "For Front End proxies, use container port as service port. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "feproxy_vips_enable_proxy_arp": {
                    "description": "Enable proxy ARP from Host interface for Front End  proxies. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "fleet_endpoint": {
                    "description": "Optional fleet remote endpoint if fleet is used for SE deployment. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "http_container_ports": {
                    "description": "List of container ports that create a HTTP Virtualservice instead of a TCP/UDP VirtualService. Defaults to 80. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "format": "int32"
                },
                "nuage_controller": {
                    "description": "Nuage Overlay SDN Controller information. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/NuageSDNController"
                },
                "rancher_servers": {
                    "description": "List of Rancher servers; In case of a load balanced Rancher multi cluster, use Virtual IP of the cluster. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "se_deployment_method": {
                    "description": "Use Fleet/SSH for SE deployment. Enum options - SE_CREATE_FLEET, SE_CREATE_SSH, SE_CREATE_POD. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "SE_CREATE_SSH"
                },
                "se_exclude_attributes": {
                    "description": "Exclude hosts with attributes for SE creation. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MesosAttribute"
                    }
                },
                "se_include_attributes": {
                    "description": "Create SEs just on hosts with include attributes. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MesosAttribute"
                    }
                },
                "se_spawn_rate": {
                    "description": "New SE spawn rate per minute. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 25,
                    "format": "int32"
                },
                "se_volume": {
                    "description": "Host volume to be used as a disk for Avi SE, This is a disruptive change. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "/opt/avi"
                },
                "secret_key": {
                    "description": "Secret key. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "services_accessible_all_interfaces": {
                    "description": "Make service ports accessible on all Host interfaces in addition to East-West VIP and/or bridge IP. Usually enabled AWS clusters to export East-West services on Host interface. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "ssh_user_ref": {
                    "description": "Cloud connector user uuid for SSH to hosts. It is a reference to an object of type CloudConnectorUser. Field introduced in 17.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "use_container_ip_port": {
                    "description": "Use container IP address port for pool instead of host IP address hostport. This mode is applicable if the container IP is reachable (not a private NATed IP) from other hosts in a routed environment for containers. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "use_controller_image": {
                    "description": "If true, use controller generated SE docker image via fileservice, else use docker repository image as defined by docker_registry_se. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                }
            }
        },
        "RoleFilterMatchLabel": {
            "type": "object",
            "required": [
                "key"
            ],
            "properties": {
                "key": {
                    "description": "Key for filter match. Field introduced in 20.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "values": {
                    "description": "Values for filter match. Multiple values will be evaluated as OR. Example  key = value1 OR key = value2. Behavior for match is key = * if this field is empty. Field introduced in 20.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "RouteInfo": {
            "type": "object",
            "required": [
                "subnet"
            ],
            "properties": {
                "if_name": {
                    "description": "Host interface name. Field introduced in 18.2.6. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "network_namespace": {
                    "description": "Network Namespace type used to add an route entry in a specific namespace. Enum options - LOCAL_NAMESPACE, HOST_NAMESPACE, OTHER_NAMESPACE. Field introduced in 18.2.6. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "HOST_NAMESPACE"
                },
                "nexthop": {
                    "description": "Host nexthop ip address. Field introduced in 18.2.6. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddr"
                },
                "subnet": {
                    "description": "Host subnet address. Field introduced in 18.2.6. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddrPrefix"
                }
            }
        },
        "Tier1LogicalRouterInfo": {
            "type": "object",
            "required": [
                "tier1_lr_id"
            ],
            "properties": {
                "locale_service": {
                    "description": "Locale-services configuration, holds T1 edge-cluster information. When VirtualService is enabled with preserve client IP, ServiceInsertion VirtualEndpoint will be created in this locale-service. By default Avi controller picks default locale-service on T1. If more than one locale-services are present, this will be used for resolving the same. Example locale-service path - /infra/tier-1s/London_Tier1Gateway1/locale-services/London_Tier1LocalServices-1. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "segment_id": {
                    "description": "Overlay segment path. Example- /infra/segments/Seg-Web-T1-01. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "tier1_lr_id": {
                    "description": "Tier1 logical router path. Example- /infra/tier-1s/T1-01. Field introduced in 20.1.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "vCenterConfiguration": {
            "type": "object",
            "required": [
                "privilege"
            ],
            "properties": {
                "content_lib": {
                    "description": "vCenter content library where Service Engine images are stored. Field introduced in 22.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/ContentLibConfig"
                },
                "datacenter": {
                    "description": "Datacenter for virtual infrastructure discovery. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "deactivate_vm_discovery": {
                    "description": "If true, VM's on the vCenter will not be discovered.Set it to true if there are more than 10000 VMs in the datacenter. Field deprecated in 30.1.1. Field introduced in 20.1.5. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "is_nsx_environment": {
                    "description": "If true, NSX-T segment spanning multiple VDS with vCenter cloud are merged to a single network in Avi. Field introduced in 22.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "management_ip_subnet": {
                    "description": "Management subnet to use for Avi Service Engines. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/IpAddrPrefix"
                },
                "management_network": {
                    "description": "Management network to use for Avi Service Engines. It is a reference to an object of type VIMgrNWRuntime. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "password": {
                    "description": "The password Avi Vantage will use when authenticating with vCenter. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "privilege": {
                    "description": "Set the access mode to vCenter as either Read, which allows Avi to discover networks and servers, or Write, which also allows Avi to create Service Engines and configure their network properties. Enum options - NO_ACCESS, READ_ACCESS, WRITE_ACCESS. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "WRITE_ACCESS"
                },
                "use_content_lib": {
                    "description": "If false, Service Engine image will not be pushed to content library. Field introduced in 22.1.1. Allowed in Enterprise edition with any value, Essentials edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "username": {
                    "description": "The username Avi Vantage will use when authenticating with vCenter. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vcenter_template_se_location": {
                    "description": "Avi Service Engine Template in vCenter to be used for creating Service Engines. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vcenter_url": {
                    "description": "vCenter hostname or IP address. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "vCloudAirConfiguration": {
            "type": "object",
            "required": [
                "privilege",
                "vca_host",
                "vca_instance",
                "vca_mgmt_network",
                "vca_orgnization",
                "vca_password",
                "vca_username",
                "vca_vdc"
            ],
            "properties": {
                "privilege": {
                    "description": "vCloudAir access mode. Enum options - NO_ACCESS, READ_ACCESS, WRITE_ACCESS. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "WRITE_ACCESS"
                },
                "vca_host": {
                    "description": "vCloudAir host address. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vca_instance": {
                    "description": "vCloudAir instance ID. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vca_mgmt_network": {
                    "description": "vCloudAir management network. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vca_orgnization": {
                    "description": "vCloudAir orgnization ID. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vca_password": {
                    "description": "vCloudAir password. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vca_username": {
                    "description": "vCloudAir username. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "vca_vdc": {
                    "description": "vCloudAir virtual data center name. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        }
    },
    "_comment": [
        "Copyright 2021 VMware, Inc.",
        "SPDX-License-Identifier: Apache License 2.0"
    ]
}