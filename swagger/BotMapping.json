{
    "swagger": "2.0",
    "info": {
        "version": "22.1.1",
        "title": "Avi BotMapping Object API",
        "contact": {
            "name": "Avi Networks Inc.",
            "url": "https://avinetworks.com/contact-us",
            "email": "support@avinetworks.com"
        },
        "description": "CLI\n```\n- configure botmapping <key>\n- show botmapping <key>\n```\n"
    },
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic",
            "description": "basic authentication"
        }
    },
    "basePath": "/api",
    "paths": {
        "/botmapping": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "refers_to",
                        "in": "query",
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid",
                        "type": "string"
                    },
                    {
                        "name": "referred_by",
                        "in": "query",
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid",
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.",
                        "type": "string"
                    },
                    {
                        "name": "include_name",
                        "in": "query",
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "skip_default",
                        "in": "query",
                        "description": "Default values are not set.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "join_subresources",
                        "in": "query",
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.",
                        "type": "string"
                    },
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BotMappingApiResponse"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "BotMapping object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BotMapping"
                        }
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BotMapping"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/botmapping/{uuid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.",
                        "type": "string"
                    },
                    {
                        "name": "include_name",
                        "in": "query",
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "skip_default",
                        "in": "query",
                        "description": "Default values are not set.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "join_subresources",
                        "in": "query",
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BotMapping"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "BotMapping object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BotMapping"
                        }
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BotMapping"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "BotMapping object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BotMapping"
                        }
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BotMapping"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "object deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "BotClassification": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "One of the system-defined Bot classification types. Enum options - HUMAN, GOOD_BOT, BAD_BOT, DANGEROUS_BOT, USER_DEFINED_BOT, UNKNOWN_CLIENT. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "user_defined_type": {
                    "description": "If 'type' has BotClassificationTypes value 'USER_DEFINED', this is the user-defined value. Field introduced in 21.1.1.",
                    "type": "string"
                }
            }
        },
        "BotClassMatcher": {
            "type": "object",
            "properties": {
                "client_classes": {
                    "description": "The list of client classes. Enum options - UNDETERMINED_CLIENT, HUMAN_CLIENT, BOT_CLIENT. Field introduced in 21.1.1. Minimum of 1 items required.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "op": {
                    "description": "The match operation. Enum options - IS_IN, IS_NOT_IN. Field introduced in 21.1.1.",
                    "type": "string",
                    "default": "IS_IN"
                }
            }
        },
        "BotMapping": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "_last_modified": {
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS).",
                    "readOnly": true,
                    "type": "string"
                },
                "mapping_rules": {
                    "description": "Rules for bot classification. Field introduced in 21.1.1.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BotMappingRule"
                    }
                },
                "name": {
                    "description": "The name of this mapping. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "tenant_ref": {
                    "description": "The unique identifier of the tenant to which this mapping belongs. It is a reference to an object of type Tenant. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "url": {
                    "description": "url",
                    "readOnly": true,
                    "type": "string"
                },
                "uuid": {
                    "description": "A unique identifier for this mapping. Field introduced in 21.1.1.",
                    "type": "string"
                }
            }
        },
        "BotMappingApiResponse": {
            "type": "object",
            "required": [
                "count",
                "results"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BotMapping"
                    }
                },
                "next": {
                    "type": "string"
                }
            }
        },
        "BotMappingRule": {
            "type": "object",
            "required": [
                "classification",
                "index",
                "match",
                "name"
            ],
            "properties": {
                "class_matcher": {
                    "description": "How to match the BotClientClass. Field deprecated in 21.1.3. Field introduced in 21.1.1.",
                    "$ref": "#/definitions/BotClassMatcher"
                },
                "classification": {
                    "description": "The assigned classification for this client. Field introduced in 21.1.1.",
                    "$ref": "#/definitions/BotClassification"
                },
                "component_matcher": {
                    "description": "The component for which this mapping is used. Enum options - BOT_DECIDER_CONSOLIDATION, BOT_DECIDER_USER_AGENT, BOT_DECIDER_IP_REPUTATION, BOT_DECIDER_IP_NETWORK_LOCATION. Field deprecated in 21.1.3. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "identifier_matcher": {
                    "description": "The list of bot identifier names and how they're matched. Field deprecated in 21.1.3. Field introduced in 21.1.1.",
                    "$ref": "#/definitions/StringMatch"
                },
                "index": {
                    "description": "Rules are processed in order of this index field. Field introduced in 21.1.1.",
                    "type": "integer",
                    "format": "int32"
                },
                "match": {
                    "description": "How to match the request  all the specified properties must be fulfilled. Field introduced in 21.1.3.",
                    "$ref": "#/definitions/BotMappingRuleMatchTarget"
                },
                "name": {
                    "description": "A name describing the rule in a short form. Field introduced in 21.1.1.",
                    "type": "string"
                },
                "type_matcher": {
                    "description": "How to match the BotClientType. Field deprecated in 21.1.3. Field introduced in 21.1.1.",
                    "$ref": "#/definitions/BotTypeMatcher"
                }
            }
        },
        "BotMappingRuleMatchTarget": {
            "type": "object",
            "properties": {
                "class_matcher": {
                    "description": "How to match the BotClientClass. Field introduced in 21.1.3.",
                    "$ref": "#/definitions/BotClassMatcher"
                },
                "client_ip": {
                    "description": "Configure client ip addresses. Field introduced in 21.1.3.",
                    "$ref": "#/definitions/IpAddrMatch"
                },
                "component_matcher": {
                    "description": "The component for which this mapping is used. Enum options - BOT_DECIDER_CONSOLIDATION, BOT_DECIDER_USER_AGENT, BOT_DECIDER_IP_REPUTATION, BOT_DECIDER_IP_NETWORK_LOCATION. Field introduced in 21.1.3.",
                    "type": "string"
                },
                "hdrs": {
                    "description": "Configure HTTP header(s). All configured headers must match. Field introduced in 21.1.3.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HdrMatch"
                    }
                },
                "host_hdr": {
                    "description": "Configure the host header. Field introduced in 21.1.3.",
                    "$ref": "#/definitions/HostHdrMatch"
                },
                "identifier_matcher": {
                    "description": "The list of bot identifier names and how they're matched. Field introduced in 21.1.3.",
                    "$ref": "#/definitions/StringMatch"
                },
                "method": {
                    "description": "Configure HTTP methods. Field introduced in 21.1.3.",
                    "$ref": "#/definitions/MethodMatch"
                },
                "path": {
                    "description": "Configure request paths. Field introduced in 21.1.3.",
                    "$ref": "#/definitions/PathMatch"
                },
                "type_matcher": {
                    "description": "How to match the BotClientType. Field introduced in 21.1.3.",
                    "$ref": "#/definitions/BotTypeMatcher"
                }
            }
        },
        "BotTypeMatcher": {
            "type": "object",
            "properties": {
                "client_types": {
                    "description": "The list of client types. Enum options - UNDETERMINED_CLIENT_TYPE, WEB_BROWSER, IN_APP_BROWSER, SEARCH_ENGINE, IMPERSONATOR, SPAM_SOURCE, WEB_ATTACKS, BOTNET, SCANNER, DENIAL_OF_SERVICE, CLOUD_SOURCE, SECURITY_SCANNER, SITE_MONITOR, GENERIC_APPLICATION. Field introduced in 21.1.1. Minimum of 1 items required.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "op": {
                    "description": "The match operation. Enum options - IS_IN, IS_NOT_IN. Field introduced in 21.1.1.",
                    "type": "string",
                    "default": "IS_IN"
                }
            }
        },
        "HdrMatch": {
            "type": "object",
            "required": [
                "hdr",
                "match_criteria"
            ],
            "properties": {
                "hdr": {
                    "description": "Name of the HTTP header whose value is to be matched.",
                    "type": "string"
                },
                "match_case": {
                    "description": "Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE.",
                    "type": "string",
                    "default": "INSENSITIVE"
                },
                "match_criteria": {
                    "description": "Criterion to use for matching headers in the HTTP request. Enum options - HDR_EXISTS, HDR_DOES_NOT_EXIST, HDR_BEGINS_WITH, HDR_DOES_NOT_BEGIN_WITH, HDR_CONTAINS, HDR_DOES_NOT_CONTAIN, HDR_ENDS_WITH, HDR_DOES_NOT_END_WITH, HDR_EQUALS, HDR_DOES_NOT_EQUAL.",
                    "type": "string"
                },
                "value": {
                    "description": "String values to match in the HTTP header.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "HostHdrMatch": {
            "type": "object",
            "required": [
                "match_criteria"
            ],
            "properties": {
                "match_case": {
                    "description": "Case sensitivity to use for the match. Enum options - SENSITIVE, INSENSITIVE.",
                    "type": "string",
                    "default": "INSENSITIVE"
                },
                "match_criteria": {
                    "description": "Criterion to use for the host header value match. Enum options - HDR_EXISTS, HDR_DOES_NOT_EXIST, HDR_BEGINS_WITH, HDR_DOES_NOT_BEGIN_WITH, HDR_CONTAINS, HDR_DOES_NOT_CONTAIN, HDR_ENDS_WITH, HDR_DOES_NOT_END_WITH, HDR_EQUALS, HDR_DOES_NOT_EQUAL.",
                    "type": "string"
                },
                "value": {
                    "description": "String value(s) in the host header.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "IpAddr": {
            "type": "object",
            "required": [
                "addr",
                "type"
            ],
            "properties": {
                "addr": {
                    "description": "IP address.",
                    "type": "string"
                },
                "type": {
                    "description": " Enum options - V4, DNS, V6.",
                    "type": "string"
                }
            }
        },
        "IpAddrMatch": {
            "type": "object",
            "required": [
                "match_criteria"
            ],
            "properties": {
                "addrs": {
                    "description": "IP address(es).",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IpAddr"
                    }
                },
                "group_refs": {
                    "description": "UUID of IP address group(s). It is a reference to an object of type IpAddrGroup.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "match_criteria": {
                    "description": "Criterion to use for IP address matching the HTTP request. Enum options - IS_IN, IS_NOT_IN.",
                    "type": "string"
                },
                "prefixes": {
                    "description": "IP address prefix(es).",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IpAddrPrefix"
                    }
                },
                "ranges": {
                    "description": "IP address range(s).",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IpAddrRange"
                    }
                }
            }
        },
        "IpAddrPrefix": {
            "type": "object",
            "required": [
                "ip_addr",
                "mask"
            ],
            "properties": {
                "ip_addr": {
                    "description": "Placeholder for description of property ip_addr of obj type IpAddrPrefix field type str  type object",
                    "$ref": "#/definitions/IpAddr"
                },
                "mask": {
                    "description": "Number of mask.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IpAddrRange": {
            "type": "object",
            "required": [
                "begin",
                "end"
            ],
            "properties": {
                "begin": {
                    "description": "Starting IP address of the range.",
                    "$ref": "#/definitions/IpAddr"
                },
                "end": {
                    "description": "Ending IP address of the range.",
                    "$ref": "#/definitions/IpAddr"
                }
            }
        },
        "MethodMatch": {
            "type": "object",
            "required": [
                "match_criteria"
            ],
            "properties": {
                "match_criteria": {
                    "description": "Criterion to use for HTTP method matching the method in the HTTP request. Enum options - IS_IN, IS_NOT_IN.",
                    "type": "string"
                },
                "methods": {
                    "description": "Configure HTTP method(s). Enum options - HTTP_METHOD_GET, HTTP_METHOD_HEAD, HTTP_METHOD_PUT, HTTP_METHOD_DELETE, HTTP_METHOD_POST, HTTP_METHOD_OPTIONS, HTTP_METHOD_TRACE, HTTP_METHOD_CONNECT, HTTP_METHOD_PATCH, HTTP_METHOD_PROPFIND, HTTP_METHOD_PROPPATCH, HTTP_METHOD_MKCOL, HTTP_METHOD_COPY, HTTP_METHOD_MOVE, HTTP_METHOD_LOCK, HTTP_METHOD_UNLOCK. Minimum of 1 items required. Maximum of 16 items allowed. Allowed in Basic(Allowed values- HTTP_METHOD_GET,HTTP_METHOD_PUT,HTTP_METHOD_POST,HTTP_METHOD_HEAD,HTTP_METHOD_OPTIONS) edition, Essentials(Allowed values- HTTP_METHOD_GET,HTTP_METHOD_PUT,HTTP_METHOD_POST,HTTP_METHOD_HEAD,HTTP_METHOD_OPTIONS) edition, Enterprise edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PathMatch": {
            "type": "object",
            "required": [
                "match_criteria"
            ],
            "properties": {
                "match_case": {
                    "description": "Case sensitivity to use for the matching. Enum options - SENSITIVE, INSENSITIVE.",
                    "type": "string",
                    "default": "INSENSITIVE"
                },
                "match_criteria": {
                    "description": "Criterion to use for matching the path in the HTTP request URI. Enum options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH. Allowed in Basic(Allowed values- BEGINS_WITH,DOES_NOT_BEGIN_WITH,CONTAINS,DOES_NOT_CONTAIN,ENDS_WITH,DOES_NOT_END_WITH,EQUALS,DOES_NOT_EQUAL) edition, Essentials(Allowed values- BEGINS_WITH,DOES_NOT_BEGIN_WITH,CONTAINS,DOES_NOT_CONTAIN,ENDS_WITH,DOES_NOT_END_WITH,EQUALS,DOES_NOT_EQUAL) edition, Enterprise edition.",
                    "type": "string",
                    "default": "CONTAINS"
                },
                "match_str": {
                    "description": "String values.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "string_group_refs": {
                    "description": "UUID of the string group(s). It is a reference to an object of type StringGroup.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "StringMatch": {
            "type": "object",
            "required": [
                "match_criteria"
            ],
            "properties": {
                "match_criteria": {
                    "description": "Criterion to use for string matching the HTTP request. Enum options - BEGINS_WITH, DOES_NOT_BEGIN_WITH, CONTAINS, DOES_NOT_CONTAIN, ENDS_WITH, DOES_NOT_END_WITH, EQUALS, DOES_NOT_EQUAL, REGEX_MATCH, REGEX_DOES_NOT_MATCH. Allowed in Basic(Allowed values- BEGINS_WITH,DOES_NOT_BEGIN_WITH,CONTAINS,DOES_NOT_CONTAIN,ENDS_WITH,DOES_NOT_END_WITH,EQUALS,DOES_NOT_EQUAL) edition, Essentials(Allowed values- BEGINS_WITH,DOES_NOT_BEGIN_WITH,CONTAINS,DOES_NOT_CONTAIN,ENDS_WITH,DOES_NOT_END_WITH,EQUALS,DOES_NOT_EQUAL) edition, Enterprise edition.",
                    "type": "string"
                },
                "match_str": {
                    "description": "String value(s).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "string_group_refs": {
                    "description": "UUID of the string group(s). It is a reference to an object of type StringGroup.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "_comment": [
        "Copyright 2021 VMware, Inc.",
        "SPDX-License-Identifier: Apache License 2.0"
    ]
}