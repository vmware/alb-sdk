{
    "swagger": "2.0",
    "info": {
        "version": "30.2.1",
        "title": "Avi AuthProfile Object API",
        "contact": {
            "name": "Avi Networks Inc.",
            "url": "https://avinetworks.com/contact-us",
            "email": "support@avinetworks.com"
        },
        "description": "CLI\n```\n- configure authprofile <key>\n- show authprofile <key>\n```\n"
    },
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic",
            "description": "basic authentication"
        }
    },
    "basePath": "/api",
    "paths": {
        "/authprofile": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "refers_to",
                        "in": "query",
                        "description": "Filter to request all objects that refers to another Avi resource. Its syntax is refers_to=<obj_type>:<obj_uuid>. Eg. get all virtual services referring to pool p1 will be refers_to=pool:pool_p1_uuid",
                        "type": "string"
                    },
                    {
                        "name": "referred_by",
                        "in": "query",
                        "description": "Filter to request all objects that are referred by another Avi resource. Its syntax is referred_by=<obj_type>:<obj_uuid>. Eg. get all pools referred_by virtual service vs1 - referred_by=virtualservice:vs_vs1_uuid",
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.",
                        "type": "string"
                    },
                    {
                        "name": "include_name",
                        "in": "query",
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "skip_default",
                        "in": "query",
                        "description": "Default values are not set.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "join_subresources",
                        "in": "query",
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.",
                        "type": "string"
                    },
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthProfileApiResponse"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "AuthProfile object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthProfile"
                        }
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthProfile"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            }
        },
        "/authprofile/{uuid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Avi-Tenant",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields to be returned for the resource. Some fields like name, URL, uuid etc. are always returned.",
                        "type": "string"
                    },
                    {
                        "name": "include_name",
                        "in": "query",
                        "description": "All the Avi REST reference URIs have a name suffix as URI#name. It is useful to get the referenced resource name without performing get on that object.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "skip_default",
                        "in": "query",
                        "description": "Default values are not set.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "join_subresources",
                        "in": "query",
                        "description": "It automatically returns additional dependent resources like runtime. Eg. join_subresources=runtime.",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthProfile"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "AuthProfile object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthProfile"
                        }
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthProfile"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "AuthProfile object creation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthProfile"
                        }
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthProfile"
                        }
                    },
                    "401": {
                        "description": "log in failed"
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "object name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Avi-Tenant",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header"
                    },
                    {
                        "name": "X-Avi-Tenant-UUID",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Tenant Header UUID"
                    },
                    {
                        "name": "X-Avi-Version",
                        "in": "header",
                        "type": "string",
                        "required": true,
                        "description": "The caller is required to set Avi Version Header to the expected version of configuration. The response from the controller will provide and accept data according to the specified version. The controller will reject POST and PUT requests where the data is not compatible with the specified version."
                    },
                    {
                        "name": "X-CSRFToken",
                        "in": "header",
                        "type": "string",
                        "required": false,
                        "description": "Avi Controller may send back CSRF token in the response cookies. The caller should update the request headers with this token else controller will reject requests."
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "description": "UUID of the object to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "object deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "AuthProfile": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "_last_modified": {
                    "description": "UNIX time since epoch in microseconds. Units(MICROSECONDS).",
                    "readOnly": true,
                    "type": "string"
                },
                "configpb_attributes": {
                    "description": "Protobuf versioning for config pbs. Field introduced in 21.1.1. Allowed in Enterprise edition with any value, Essentials edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/ConfigPbAttributes"
                },
                "description": {
                    "description": " Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "http": {
                    "description": "HTTP user authentication params. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/AuthProfileHTTPClientParams"
                },
                "jwt_profile_ref": {
                    "description": "JWTServerProfile to be used for authentication. It is a reference to an object of type JWTServerProfile. Field introduced in 20.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "ldap": {
                    "description": "LDAP server and directory settings. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/LdapAuthSettings"
                },
                "markers": {
                    "description": "List of labels to be used for granular RBAC. Field introduced in 20.1.6. Allowed in Enterprise edition with any value, Essentials edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleFilterMatchLabel"
                    }
                },
                "name": {
                    "description": "Name of the Auth Profile. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "oauth_profile": {
                    "description": "OAuth Profile - Common endpoint information. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/OAuthProfile"
                },
                "pa_agent_ref": {
                    "description": "PingAccessAgent uuid. It is a reference to an object of type PingAccessAgent. Field introduced in 18.2.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "saml": {
                    "description": "SAML settings. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/SamlSettings"
                },
                "tacacs_plus": {
                    "description": "TACACS+ settings. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/TacacsPlusAuthSettings"
                },
                "tenant_ref": {
                    "description": " It is a reference to an object of type Tenant. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of the Auth Profile. Enum options - AUTH_PROFILE_LDAP, AUTH_PROFILE_TACACS_PLUS, AUTH_PROFILE_SAML, AUTH_PROFILE_PINGACCESS, AUTH_PROFILE_JWT, AUTH_PROFILE_OAUTH. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "url": {
                    "description": "url",
                    "readOnly": true,
                    "type": "string"
                },
                "uuid": {
                    "description": "UUID of the Auth Profile. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "AuthProfileApiResponse": {
            "type": "object",
            "required": [
                "count",
                "results"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AuthProfile"
                    }
                },
                "next": {
                    "type": "string"
                }
            }
        },
        "AuthProfileHTTPClientParams": {
            "type": "object",
            "properties": {
                "cache_expiration_time": {
                    "description": "The max allowed length of time a clients authentication is cached. Allowed values are 1-30. Unit is SEC. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 5,
                    "format": "int32"
                },
                "request_header": {
                    "description": "Insert an HTTP header.  This field is used to define the header name.  The value of the header is set to the client's HTTP Auth user ID. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "require_user_groups": {
                    "description": "A user should be a member of these groups.  Each group is defined by the DN.  For example, CN=testgroup,OU=groups,dc=example,dc=avinetworks,DC=com. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AuthTacacsPlusAttributeValuePair": {
            "type": "object",
            "properties": {
                "mandatory": {
                    "description": "mandatory. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "name": {
                    "description": "attribute name. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "value": {
                    "description": "attribute value. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "ConfigPbAttributes": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "Protobuf version number. Gets incremented if there is se Diff of federated diff in config pbs.This field will be a monotonically increasing number indicating the number of Config Update operations. Field introduced in 21.1.1. Allowed in Enterprise edition with any value, Essentials edition with any value, Basic edition with any value, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 1,
                    "format": "int32"
                }
            }
        },
        "LdapAuthSettings": {
            "type": "object",
            "required": [
                "security_mode"
            ],
            "properties": {
                "base_dn": {
                    "description": "The LDAP base DN.  For example, avinetworks.com would be DC=avinetworks,DC=com. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "bind_as_administrator": {
                    "description": "LDAP administrator credentials are used to search for users and group memberships. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "email_attribute": {
                    "description": "LDAP attribute that refers to user email. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "email"
                },
                "full_name_attribute": {
                    "description": "LDAP attribute that refers to user's full name. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "name"
                },
                "port": {
                    "description": "Query the LDAP servers on this port. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 389,
                    "format": "int32"
                },
                "security_mode": {
                    "description": "LDAP connection security mode. Enum options - AUTH_LDAP_SECURE_NONE, AUTH_LDAP_SECURE_USE_LDAPS. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "AUTH_LDAP_SECURE_USE_LDAPS"
                },
                "server": {
                    "description": "LDAP server IP address or Hostname. Use IP address if an auth profile is used to configure Virtual Service. Minimum of 1 items required. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "settings": {
                    "description": "LDAP full directory configuration with administrator credentials. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/LdapDirectorySettings"
                },
                "user_bind": {
                    "description": "LDAP anonymous bind configuration. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/LdapUserBindSettings"
                }
            }
        },
        "LdapDirectorySettings": {
            "type": "object",
            "required": [
                "admin_bind_dn",
                "password",
                "user_id_attribute"
            ],
            "properties": {
                "admin_bind_dn": {
                    "description": "LDAP Admin User DN. Administrator credentials are required to search for users under user search DN or groups under group search DN. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "group_filter": {
                    "description": "Group filter is used to identify groups during search. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "(objectClass=*)"
                },
                "group_member_attribute": {
                    "description": "LDAP group attribute that identifies each of the group members. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "member"
                },
                "group_member_is_full_dn": {
                    "description": "Group member entries contain full DNs instead of just user id attribute values. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "group_search_dn": {
                    "description": "LDAP group search DN is the root of search for a given group in the LDAP directory. Only matching groups present in this LDAP directory sub-tree will be checked for user membership. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "group_search_scope": {
                    "description": "LDAP group search scope defines how deep to search for the group starting from the group search DN. Enum options - AUTH_LDAP_SCOPE_BASE, AUTH_LDAP_SCOPE_ONE, AUTH_LDAP_SCOPE_SUBTREE. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "AUTH_LDAP_SCOPE_SUBTREE"
                },
                "ignore_referrals": {
                    "description": "During user or group search, ignore searching referrals. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "password": {
                    "description": "LDAP Admin User Password. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "user_attributes": {
                    "description": "LDAP user attributes to fetch on a successful user bind. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id_attribute": {
                    "description": "LDAP user id attribute is the login attribute that uniquely identifies a single user record. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "user_search_dn": {
                    "description": "LDAP user search DN is the root of search for a given user in the LDAP directory. Only user records present in this LDAP directory sub-tree will be validated. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "user_search_scope": {
                    "description": "LDAP user search scope defines how deep to search for the user starting from user search DN. Enum options - AUTH_LDAP_SCOPE_BASE, AUTH_LDAP_SCOPE_ONE, AUTH_LDAP_SCOPE_SUBTREE. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "AUTH_LDAP_SCOPE_ONE"
                }
            }
        },
        "LdapUserBindSettings": {
            "type": "object",
            "required": [
                "dn_template",
                "token",
                "user_id_attribute"
            ],
            "properties": {
                "dn_template": {
                    "description": "LDAP user DN pattern is used to bind LDAP user after replacing the user token with real username. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "token": {
                    "description": "LDAP token is replaced with real user name in the user DN pattern. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "<user>"
                },
                "user_attributes": {
                    "description": "LDAP user attributes to fetch on a successful user bind. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id_attribute": {
                    "description": "LDAP user id attribute is the login attribute that uniquely identifies a single user record. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "OAuthAppSettings": {
            "type": "object",
            "required": [
                "client_id",
                "client_secret"
            ],
            "properties": {
                "client_id": {
                    "description": "Application specific identifier. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "client_secret": {
                    "description": "Application specific identifier secret. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "oidc_config": {
                    "description": "OpenID Connect specific configuration. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/OIDCConfig"
                },
                "scopes": {
                    "description": "Scope specified to give limited access to the app. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "OAuthProfile": {
            "type": "object",
            "required": [
                "authorization_endpoint"
            ],
            "properties": {
                "authorization_endpoint": {
                    "description": "URL of authorization server. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "end_session_endpoint": {
                    "description": "Logout URI of IDP server. Field introduced in 22.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "instance_id": {
                    "description": "Instance uuid of the csp service. Field introduced in 23.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "introspection_endpoint": {
                    "description": "URL of token introspection server. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "issuer": {
                    "description": "Uniquely identifiable name of the Token Issuer. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "jwks_timeout": {
                    "description": "Lifetime of the cached JWKS keys. Allowed values are 0-1440. Field introduced in 21.1.3. Unit is MIN. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "format": "int32"
                },
                "jwks_uri": {
                    "description": "JWKS URL of the endpoint that hosts the public keys that can be used to verify any JWT issued by the authorization server. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "oauth_controller_settings": {
                    "description": "OAuth App Settings for controller authentication. Field introduced in 30.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/OAuthAppSettings"
                },
                "oauth_profile_type": {
                    "description": "Type of OAuth profile which defines the usage type. Enum options - CLIENT_OAUTH, CONTROLLER_OAUTH. Field introduced in 30.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "CLIENT_OAUTH"
                },
                "oauth_provider": {
                    "description": "Type of OAuth Provider when using controller oauth as oauth profile type. Enum options - OAUTH_CSP. Field introduced in 30.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "oauth_resp_buffer_sz": {
                    "description": "Buffering size for the responses from the OAUTH enpoints. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 102400,
                    "format": "int32"
                },
                "org_id": {
                    "description": "Organization Id for OAuth. Field introduced in 30.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "pool_ref": {
                    "description": "Pool object to interface with Authorization Server endpoints. It is a reference to an object of type Pool. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "redirect_uri": {
                    "description": "Redirect URI specified in the request to Authorization Server. Field introduced in 30.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "service_id": {
                    "description": "Uuid value of csp service. Field introduced in 23.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "service_name": {
                    "description": "Name of the csp service. Field introduced in 23.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "token_endpoint": {
                    "description": "URL of token exchange server. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "userinfo_endpoint": {
                    "description": "URL of the Userinfo Endpoint. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "OIDCConfig": {
            "type": "object",
            "properties": {
                "oidc_enable": {
                    "description": "Adds openid as one of the scopes enabling OpenID Connect flow. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                },
                "profile": {
                    "description": "Fetch profile information by enabling profile scope. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean",
                    "default": true
                },
                "userinfo": {
                    "description": "Fetch profile information from Userinfo Endpoint. Field introduced in 21.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "boolean"
                }
            }
        },
        "RoleFilterMatchLabel": {
            "type": "object",
            "required": [
                "key"
            ],
            "properties": {
                "key": {
                    "description": "Key for filter match. Field introduced in 20.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "values": {
                    "description": "Values for filter match. Multiple values will be evaluated as OR. Example  key = value1 OR key = value2. Behavior for match is key = * if this field is empty. Field introduced in 20.1.3. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SamlIdentityProviderSettings": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "SAML IDP metadata. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "metadata_url": {
                    "description": "SAML IDP Federation Metadata Url. Field introduced in 30.1.1. Allowed in Enterprise edition with any value, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "SamlServiceProviderNode": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "entity_id": {
                    "description": "Globally unique entityID for this node. Entity ID on the IDP should match this. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "name": {
                    "description": "Refers to the Cluster name identifier (Virtual IP or FQDN). Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "signing_ssl_key_and_certificate_ref": {
                    "description": "Service Engines will use this SSL certificate to sign assertions going to the IdP. It is a reference to an object of type SSLKeyAndCertificate. Field introduced in 18.2.1. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "single_signon_url": {
                    "description": "Single Signon URL to be programmed on the IDP. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "SamlServiceProviderSettings": {
            "type": "object",
            "properties": {
                "fqdn": {
                    "description": "FQDN if entity type is DNS_FQDN . Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "org_display_name": {
                    "description": "Service Provider Organization Display Name. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "org_name": {
                    "description": "Service Provider Organization Name. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "org_url": {
                    "description": "Service Provider Organization URL. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "saml_entity_type": {
                    "description": "Type of SAML endpoint. Enum options - AUTH_SAML_CLUSTER_VIP, AUTH_SAML_DNS_FQDN, AUTH_SAML_APP_VS. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "sp_nodes": {
                    "description": "Service Provider node information. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SamlServiceProviderNode"
                    }
                },
                "tech_contact_email": {
                    "description": "Service Provider technical contact email. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "tech_contact_name": {
                    "description": "Service Provider technical contact name. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                }
            }
        },
        "SamlSettings": {
            "type": "object",
            "required": [
                "idp",
                "sp"
            ],
            "properties": {
                "idp": {
                    "description": "Configure remote Identity provider settings. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/SamlIdentityProviderSettings"
                },
                "sp": {
                    "description": "Configure service provider settings for the Controller. Field introduced in 17.2.3. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "$ref": "#/definitions/SamlServiceProviderSettings"
                }
            }
        },
        "TacacsPlusAuthSettings": {
            "type": "object",
            "properties": {
                "authorization_attrs": {
                    "description": "TACACS+ authorization attribute value pairs. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AuthTacacsPlusAttributeValuePair"
                    }
                },
                "password": {
                    "description": "TACACS+ server shared secret. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string"
                },
                "port": {
                    "description": "TACACS+ server listening port. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "integer",
                    "default": 49,
                    "format": "int32"
                },
                "server": {
                    "description": "TACACS+ server IP address or FQDN. Minimum of 1 items required. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service": {
                    "description": "TACACS+ service. Enum options - AUTH_TACACS_PLUS_SERVICE_NONE, AUTH_TACACS_PLUS_SERVICE_LOGIN, AUTH_TACACS_PLUS_SERVICE_ENABLE, AUTH_TACACS_PLUS_SERVICE_PPP, AUTH_TACACS_PLUS_SERVICE_ARAP, AUTH_TACACS_PLUS_SERVICE_PT, AUTH_TACACS_PLUS_SERVICE_RCMD, AUTH_TACACS_PLUS_SERVICE_X25, AUTH_TACACS_PLUS_SERVICE_NASI, AUTH_TACACS_PLUS_SERVICE_FWPROXY. Allowed in Enterprise edition with any value, Essentials, Basic, Enterprise with Cloud Services edition.",
                    "type": "string",
                    "default": "AUTH_TACACS_PLUS_SERVICE_LOGIN"
                }
            }
        }
    },
    "_comment": [
        "Copyright 2021 VMware, Inc.",
        "SPDX-License-Identifier: Apache License 2.0"
    ]
}